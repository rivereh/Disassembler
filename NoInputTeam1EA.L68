00001000 Starting Address
Assembler used: EASy68K Editor/Assembler v5.16.01
Created On: 12/5/2021 10:42:51 PM

00000000                             1  *-----------------------------------------------------------
00000000                             2  * Title      :
00000000                             3  * Written by :
00000000                             4  * Date:
00000000                             5  * Description:
00000000                             6  *-----------------------------------------------------------  
00001000                             7  START       ORG     $1000 
00001000                             8  
00001000                             9  *-----------------------------------------------------------
00001000                            10  * Initialize loop and places op codes inside the memory
00001000                            11  * for testing
00001000                            12  *-----------------------------------------------------------
00001000                            13  TESTINGCODES
00001000  343C 4000                 14              MOVE.W  #$4000,D2
00001004  363C 4060                 15              MOVE.W  #$4060,D3
00001008  47F8 4000                 16              LEA     $4000,A3
0000100C  36FC FFCA                 17              MOVE.W  #$FFCA,(A3)+    *RANDOM
00001010  36FC 3201                 18              MOVE.W  #$3201,(A3)+    *MOVE.W D1,D1
00001014  36FC 2822                 19              MOVE.W  #$2822,(A3)+    *MOVE.L  -(A2),D4
00001018  36FC 1CD3                 20              MOVE.W  #$1CD3,(A3)+    *MOVE.B  (A3),(A6)+ 
0000101C  36FC 3907                 21              MOVE.W  #$3907,(A3)+    *MOVE.W D7,-(A4)
00001020  36FC 22DB                 22              MOVE.W  #$22DB,(A3)+    *MOVE.L  (A3)+,(A1)+
00001024  36FC 2204                 23              MOVE.W  #$2204,(A3)+    *MOVE.L D4,D1
00001028  36FC 3487                 24              MOVE.W  #$3487,(A3)+    *MOVE.W D7,(A2)
0000102C  36FC 2812                 25              MOVE.W  #$2812,(A3)+    *MOVE.L (A2),D4 1C93
00001030  36FC 1C93                 26              MOVE.W  #$1C93,(A3)+    *MOVE.B  (A3),(A6)
00001034  26FC 16385677             27              MOVE.L  #$16385677,(A3)+ *MOVE.B $5677,D3    
0000103A  26FC 18385677             28              MOVE.L  #$18385677,(A3)+ *MOVE.B $5677,D4
00001040  26FC 33C32334             29              MOVE.L  #$33C32334,(A3)+ *MOVE.W D3,$23349911
00001046  36FC 9911                 30              MOVE.W  #$9911,(A3)+     *continuation
0000104A  26FC 28382233             31              MOVE.L  #$28382233,(A3)+  *MOVE.L $2233,D4
00001050  26FC 11C344FF             32              MOVE.L  #$11C344FF,(A3)+ *MOVE.B D3,$44FF
00001056  26FC 1C3923A1             33              MOVE.L  #$1C3923A1,(A3)+
0000105C  36FC 9900                 34              MOVE.W  #$9900,(A3)+      *MOVE.B  $23A19900,D6
00001060  36FC FF02                 35              MOVE.W  #$FF02,(A3)+      *RANDOM
00001064  26FC 383C04D2             36              MOVE.L  #$383C04D2,(A3)+  *MOVE.W  #1234,D4
0000106A  36FC 3381                 37              MOVE.W  #$3381,(A3)+        *INVALIDEA
0000106E  26FC 243C00BC             38              MOVE.L  #$243C00BC,(A3)+   *MOVE.L  #12345678,D2
00001074  26FC 614E31FC             39              MOVE.L  #$614E31FC,(A3)+    
0000107A  26FC 0D052488             40              MOVE.L  #$0D052488,(A3)+    *MOVE.W  #3333,$2488
00001080  26FC 040300AB             41              MOVE.L  #$040300AB,(A3)+    *SUB.B   #$AB,D3
00001086  26FC 04040016             42              MOVE.L  #$04040016,(A3)+   *SUB.B   #22,D4 converts to subi
0000108C  36FC 9A93                 43              MOVE.W  #$9A93,(A3)+        *SUB.L   (A3),D5 
00001090  36FC 98DB                 44              MOVE.W  #$98DB,(A3)+        *SUB.W   (A3)+,A4 converts to suba        
00001094  26FC 98380022             45              MOVE.L  #$98380022,(A3)+   *SUB.B   $22,D4
0000109A  36FC 9762                 46              MOVE.W  #$9762,(A3)+    *SUB.W   D3,-(A2)
0000109E  36FC 99B9                 47              MOVE.W  #$99B9,(A3)+
000010A2  26FC ABCD1234             48              MOVE.L  #$ABCD1234,(A3)+    *SUB.L   D4,$ABCD1234
000010A8                            49              *MOVE.W  #$D4D9,(A3)+    *ADDA.W (A1)+,A2
000010A8  36FC 984C                 50              MOVE.W  #$984C,(A3)+    *SUB.W   A4,D4
000010AC  36FC D441                 51              MOVE.W  #$D441,(A3)+    *ADD.W   D1,D2
000010B0                            52              
000010B0  36FC DE4C                 53              MOVE.W  #$DE4C,(A3)+    *ADD.W   A4,D7
000010B4                            54             
000010B4                            55              *MOVE.L  #$06632244,(A3)+ *ADD.W   #$2244,-(A3)
000010B4  36FC 984C                 56              MOVE.W  #$984C,(A3)+    *SUB.W   A4,D4
000010B8                            57              
000010B8  36FC 98C4                 58              MOVE.W  #$98C4,(A3)+    *SUB.W   D4,A4
000010BC  36FC 88C4                 59              MOVE.W  #$88C4,(A3)+    *INVALID EA
000010C0  26FC 06443344             60              MOVE.L  #$06443344,(A3)+    *ADD.W   #$3344,D4 (converts to ADDI which is invalid ea)
000010C6  26FC D8785566             61              MOVE.L  #$D8785566,(A3)+    *ADD.W  $5566,D4
000010CC  26FC D9B95566             62              MOVE.L  #$D9B95566,(A3)+      *ADD.L   D4,$55667788
000010D2  36FC 7788                 63              MOVE.W  #$7788,(A3)+        
000010D6  26FC D9380033             64              MOVE.L  #$D9380033,(A3)+    *ADD.B   D4,$33
000010DC  36FC D40D                 65              MOVE.W  #$D40D,(A3)+        *ADD.B   A5,D4 INVALID EA
000010E0  36FC D84D                 66              MOVE.W  #$D84D,(A3)+        *ADD.W   A5,D4 
000010E4  36FC DE5B                 67              MOVE.W  #$DE5B,(A3)+        *ADD.W (A3)+,D7
000010E8  26FC D97A1234             68              MOVE.L  #$D97A1234,(A3)+    *ADD.W   D4,#$1234 INVALIDEA
000010EE  36FC D127                 69              MOVE.W  #$D127,(A3)+        *ADD.B   D0,-(A7)
000010F2  36FC DCCD                 70              MOVE.W  #$DCCD,(A3)+        *ADDA.W A5,A6
000010F6                            71             
000010F6  26FC DDFC1122             72              MOVE.L  #$DDFC1122,(A3)+    *ADDA.L  #$11223344,A6
000010FC  36FC 3344                 73              MOVE.W  #$3344,(A3)+
00001100  36FC 5843                 74              MOVE.W  #$5843,(A3)+        *ADDQ.W #$4,D3
00001104  36FC 5E8A                 75              MOVE.W  #$5E8A,(A3)+        *ADDQ.L  #$7,A2
00001108  26FC 52382233             76              MOVE.L  #$52382233,(A3)+    *ADDQ.B  #1,$2233
0000110E  36FC 344D                 77              MOVE.W  #$344D,(A3)+        *MOVEA   A5,A2
00001112  36FC 700E                 78              MOVE.W  #$700E,(A3)+        *MOVEQ  #14, D0
00001116  26FC DDF98822             79              MOVE.L  #$DDF98822,(A3)+    *ADDA.L  $88223344,A6
0000111C  36FC 3344                 80              MOVE.W  #$3344,(A3)+
00001120  26FC DEF82233             81              MOVE.L  #$DEF82233,(A3)+     *ADDA.W  $2233,A7\
00001126  26FC DDFC2233             82              MOVE.L  #$DDFC2233,(A3)+    *ADDA.L  #$22334455,A6
0000112C  36FC 4455                 83              MOVE.W  #$4455,(A3)+
00001130  36FC DECE                 84              MOVE.W  #$DECE,(A3)+        *ADDA.W  A6,A7
00001134  36FC 3E4E                 85              MOVE.W  #$3E4E,(A3)+        *MOVEA.W A6,A7
00001138  36FC 3E47                 86              MOVE.W  #$3E47,(A3)+        *MOVEA.W D7,A7    
0000113C  26FC 3C782333             87              MOVE.L  #$3C782333,(A3)+    *MOVEA.W $2333,A6
00001142  36FC 1E79                 88              MOVE.W  #$1E79,(A3)+        *INVALID EA
00001146  36FC 7E18                 89              MOVE.W  #$7E18,(A3)+        *MOVEQ #24,D7
0000114A  36FC 7E46                 90              MOVE.W  #$7E46,(A3)+        *MOVEQ  #$46,D7
0000114E  36FC 70AA                 91              MOVE.W  #$70AA,(A3)+        MOVEQ   #$AA,D0
00001152  36FC 41D4                 92              MOVE.W  #$41D4,(A3)+        *LEA (A4),A0
00001156  26FC 49F85566             93              MOVE.L  #$49F85566,(A3)+    *LEA $5566,A2
0000115C  26FC 45F80033             94              MOVE.L  #$45F80033,(A3)+    *LEA $33,A2
00001162  26FC 49F95566             95              MOVE.L  #$49F95566,(A3)+    *LEA $55667788,A4
00001168  36FC 7788                 96              MOVE.W  #$7788,(A3)+
0000116C                            97              
0000116C  36FC 4684                 98              MOVE.W  #$4684,(A3)+        *NOT.L  D4
00001170  26FC 46383344             99              MOVE.L  #$46383344,(A3)+    *NOT.B  $3344
00001176  36FC 465F                100              MOVE.W  #$465F,(A3)+        *NOT.W  (A7)+
0000117A  26FC 46604693            101              MOVE.L  #$46604693,(A3)+    *NOT.W  (-A0), NOT.L (A3)
00001180  36FC 924C                102              MOVE.W  #$924C,(A3)+        SUB.W   A4,D1
00001184  36FC 98C4                103              MOVE.W  #$98C4,(A3)+        *SUB.W   D4,A4
00001188  36FC C292                104              MOVE.W  #$C292,(A3)+        *AND.L   (A2),D1
0000118C  36FC CE1E                105              MOVE.W  #$CE1E,(A3)+        *AND.B   (A6)+,D7
00001190  36FC C392                106              MOVE.W  #$C392,(A3)+        *AND.L   D1,(A2)
00001194                           107              
00001194  36FC CF1F                108              MOVE.W  #$CF1F,(A3)+        *AND.B   D7,(A7)+
00001198  26FC C0782233            109              MOVE.L  #$C0782233,(A3)+    *AND.W   $2233,D0
0000119E  26FC CABC2233            110              MOVE.L  #$CABC2233,(A3)+    *AND.L   #$22334411,D5
000011A4  36FC 4411                111              MOVE.W  #$4411,(A3)+          
000011A8  36FC 02A5                112              MOVE.W  #$02A5,(A3)+        *AND.L   #$22334411,-(A5)
000011AC  26FC 22334411            113              MOVE.L  #$22334411,(A3)+    
000011B2  36FC 8392                114              MOVE.W  #$8392,(A3)+        *OR.L   D1,(A2)
000011B6  36FC 8F1F                115              MOVE.W  #$8F1F,(A3)+        *OR.B   D7,(A7)+
000011BA  26FC 80782233            116              MOVE.L  #$80782233,(A3)+    *OR.W   $2233,D0
000011C0  36FC 8AB9                117              MOVE.W  #$8AB9,(A3)+        *OR.L   $22334411,D5
000011C4  26FC 22334411            118              MOVE.L  #$22334411,(A3)+
000011CA  36FC 8FA5                119              MOVE.W  #$8FA5,(A3)+        *OR.L   D7,-(A5)
000011CE                           120              
000011CE  36FC 48A7                121              MOVE.W  #$48A7,(A3)+        * MOVE.W
000011D2                           122              
000011D2                           123              
000011D2  36FC D403                124              MOVE.W  #$D403,(A3)+        * ADD.B   D3,D2
000011D6  36FC DE02                125              MOVE.W  #$DE02,(A3)+        * ADD.B   D3,D2
000011DA                           126              
000011DA                           127              
000011DA                           128              
000011DA  23C2 00002B1E            129              MOVE.L  D2,BEGIN
000011E0  23C3 00002B22            130              MOVE.L  D3,FIN
000011E6  2479 00002B1E            131              MOVEA.L BEGIN,A2
000011EC                           132              *MOVEA.L FIN,A3
000011EC                           133  
000011EC                           134  
000011EC                           135              
000011EC                           136  MAIN_LOOP
000011EC  384A                     137              MOVEA.W A2,A4           *A4 is placeholder for A2 in the absolute addy case
000011EE  B5CB                     138              CMPA.L  A3,A2           * Check are we done
000011F0  6C00 17B8                139              BGE     END     
000011F4  4286                     140              CLR.L   D6   
000011F6  BE7C 4E71                141              CMP.W   #$4E71,D7       * Check if NOP instruction
000011FA  6700 0584                142              BEQ     MATCH_NOP     
000011FE  3E12                     143              MOVE.W  (A2),D7         * Get instruction as a word
00001200                           144              
00001200  163C 0007                145              MOVE.B  #7,D3
00001204  E66F                     146              LSR.W   D3,D7
00001206  BE3C 0091                147              CMP.B   #$91,D7
0000120A  6700 128C                148              BEQ     MATCH_MOVEM
0000120E  BE3C 0099                149              CMP.B   #$99,D7
00001212  6700 1284                150              BEQ     MATCH_MOVEM
00001216                           151              
00001216  3E12                     152              MOVE.W  (A2),D7
00001218  EC4F                     153              LSR.W   #6,D7           * Shift to get only 10 digits
0000121A                           154              
0000121A  E44F                     155              LSR.W   #2,D7           * Shift 2 bits to see 8 bits total
0000121C                           156              
0000121C  BE7C 0046                157              CMP.W   #$46,D7         * Check if NOT instruction
00001220  6700 058A                158              BEQ     MATCH_NOT
00001224                           159  
00001224  E84F                     160              LSR.W   #4,D7           * Shift more to see 4 bits total
00001226  BE3C 0005                161              CMP.B   #$5,D7
0000122A  6700 0A66                162              BEQ     MATCH_ADDQ
0000122E  BE3C 000D                163              CMP.B   #$D,D7
00001232  6700 07E8                164              BEQ     MATCH_ADD
00001236  BE3C 0009                165              CMP.B   #$9,D7
0000123A  6700 0C20                166              BEQ     MATCH_SUB
0000123E  BE3C 0004                167              CMP.B   #$4,D7
00001242  6700 0698                168              BEQ     MATCH_LEA
00001246  BE3C 0007                169              CMP.B   #$7,D7
0000124A  6700 11C8                170              BEQ     MATCH_MOVEQ
0000124E                           171              
0000124E  BE3C 0008                172              CMP.B   #$8,D7
00001252  6700 00F2                173              BEQ     MATCH_OR
00001256                           174              
00001256  BE3C 000C                175              CMP.B   #$C,D7
0000125A  6700 004A                176              BEQ     MATCH_AND
0000125E                           177              
0000125E                           178              
0000125E  E44F                     179              LSR.W   #2,D7           *shift more to see 2 bits total
00001260                           180              
00001260  BE3C 0000                181              CMP.B   #$00,D7
00001264  6700 1058                182              BEQ     MATCH_MOVE
00001268                           183  
00001268                           184  NOOP                                * NOOP opcode not found in current memory being read
00001268  320A                     185              MOVE.W  A2,D1           * current memory being read that did not dissemble to readable opcode from specs
0000126A  143C 0010                186              MOVE.B  #16,D2      
0000126E  103C 000F                187              MOVE.B  #15,D0
00001272  4E4F                     188              TRAP    #15             * output current memory address word
00001274                           189      
00001274  43F9 00002A27            190              LEA     UNKNOWN,A1      * move constant DATA to A1
0000127A  103C 000E                191              MOVE.B  #14,D0          * prepare to print string in (A1)
0000127E  4E4F                     192              TRAP    #15             * display string in (A1)
00001280                           193              
00001280  43F9 00002A31            194              LEA     SPACE,A1        
00001286  4E4F                     195              TRAP    #15
00001288                           196      
00001288  143C 0010                197              MOVE.B  #16,D2          * prepare to print number in D1 in base 16
0000128C  4281                     198              CLR.L   D1
0000128E  321A                     199              MOVE.W  (A2)+,D1        * prepare value at address  A2 to be printed
00001290  103C 000F                200              MOVE.B  #15,D0      
00001294  4E4F                     201              TRAP    #15             * print first byte
00001296  43F9 00002B12            202              LEA     BLANK,A1        * PRINT BLANK LINE to prepare for next line
0000129C  103C 000E                203              MOVE.B  #14,D0
000012A0  4E4F                     204              TRAP    #15
000012A2                           205  
000012A2  6000 FF48                206              BRA     MAIN_LOOP       * Branch back up to main loop
000012A6                           207  
000012A6                           208  MATCH_AND
000012A6  220A                     209              MOVE.L  A2,D1
000012A8  143C 0010                210              MOVE.B  #16,D2
000012AC  103C 000F                211              MOVE.B  #15,D0
000012B0  4E4F                     212              TRAP    #15
000012B2                           213              
000012B2  3E12                     214              MOVE.W (A2),D7
000012B4  E94F                     215              LSL.W   #4,D7
000012B6  760D                     216              MOVE.L  #13,D3
000012B8                           217              
000012B8                           218              
000012B8                           219              
000012B8  43F9 00002AF1            220              LEA     MSG_AND,A1
000012BE  103C 000E                221              MOVE.B  #14,D0
000012C2  4E4F                     222              TRAP    #15
000012C4  3E12                     223              MOVE.W  (A2),D7
000012C6                           224              
000012C6                           225              *GET SIZE SUB
000012C6  48A7 0120                226              MOVEM.W A2/D7,-(SP)
000012CA  4EB9 000013E6            227              JSR     AND_SIZE_SUB
000012D0  4C9F 0480                228              MOVEM.W (SP)+,A2/D7
000012D4                           229              
000012D4                           230              
000012D4                           231               *TEST GET SOURCE SUB
000012D4  3E12                     232              MOVE.W  (A2),D7
000012D6  48A7 0120                233              MOVEM.W A2/D7,-(SP)
000012DA  4EB9 000014A2            234              JSR     T_AND_PRINT_SRC_EA
000012E0  4C9F 0480                235              MOVEM.W (SP)+,A2/D7
000012E4                           236              
000012E4  BC3C 0001                237              CMP.B   #$1,D6              *if D6 has $1 that means that the test failed and now print INVALID EA    
000012E8                           238  
000012E8  6700 16A2                239              BEQ     INVAL_EA_NO_RTS     
000012EC                           240              
000012EC                           241              
000012EC                           242              * TEST PRINT DEST MODE AND REGISTER
000012EC  3E12                     243              MOVE.W  (A2),D7
000012EE  48A7 0120                244              MOVEM.W A2/D7,-(SP)
000012F2  4EB9 000014E0            245              JSR     T_AND_PRINT_DEST_EA
000012F8  4C9F 0480                246              MOVEM.W (SP)+,A2/D7
000012FC                           247              
000012FC  BC3C 0001                248              CMP.B   #$1,D6              *if D6 has $1 that means that the test failed and now print INVALID EA    
00001300                           249  
00001300  6700 168A                250              BEQ     INVAL_EA_NO_RTS
00001304                           251              
00001304                           252  
00001304                           253              *GET SOURCE SUB
00001304  3E12                     254              MOVE.W  (A2),D7
00001306  48A7 0120                255              MOVEM.W A2/D7,-(SP)
0000130A  4EB9 00001668            256              JSR     AND_PRINT_SRC_EA
00001310  4C9F 0480                257              MOVEM.W (SP)+,A2/D7
00001314                           258              
00001314                           259               * PRINT COMMA
00001314  43F9 00002AB0            260              LEA     MSG_COMMA,A1
0000131A  103C 000E                261              MOVE.B  #14,D0
0000131E  4E4F                     262              TRAP    #15
00001320                           263              
00001320                           264              * PRINT DEST MODE AND REGISTER
00001320  3E12                     265              MOVE.W  (A2),D7
00001322  48A7 0120                266              MOVEM.W A2/D7,-(SP)
00001326  4EB9 000016A0            267              JSR     AND_PRINT_DEST_EA
0000132C  4C9F 0480                268              MOVEM.W (SP)+,A2/D7
00001330                           269  
00001330                           270              
00001330  344C                     271              MOVEA.W A4,A2           *move A3 to A2 since absolute address may have been used
00001332  548A                     272              ADDA.L  #$2,A2          * Increase counter by long
00001334  4287                     273              CLR.L   D7
00001336  43F9 00002B12            274              LEA     BLANK,A1        * PRINT BLANK LINE to prepare for next line
0000133C  103C 000E                275              MOVE.B  #14,D0
00001340  4E4F                     276              TRAP    #15
00001342                           277  
00001342  6000 FEA8                278              BRA     MAIN_LOOP       * Branch back up to main loop
00001346                           279              
00001346                           280  MATCH_OR
00001346  220A                     281              MOVE.L  A2,D1
00001348  143C 0010                282              MOVE.B  #16,D2
0000134C  103C 000F                283              MOVE.B  #15,D0
00001350  4E4F                     284              TRAP    #15
00001352                           285              
00001352  3E12                     286              MOVE.W (A2),D7
00001354  E94F                     287              LSL.W   #4,D7
00001356  760D                     288              MOVE.L  #13,D3
00001358                           289              
00001358                           290              
00001358                           291              
00001358  43F9 00002AF8            292              LEA     MSG_OR,A1  
0000135E  103C 000E                293              MOVE.B  #14,D0
00001362  4E4F                     294              TRAP    #15
00001364  3E12                     295              MOVE.W  (A2),D7
00001366                           296              
00001366                           297              *GET SIZE SUB
00001366  48A7 0120                298              MOVEM.W A2/D7,-(SP)
0000136A  4EB9 000013E6            299              JSR     AND_SIZE_SUB    *and same bit pattern as or
00001370  4C9F 0480                300              MOVEM.W (SP)+,A2/D7
00001374                           301              
00001374                           302              
00001374                           303               *TEST GET SOURCE SUB
00001374  3E12                     304              MOVE.W  (A2),D7
00001376  48A7 0120                305              MOVEM.W A2/D7,-(SP)
0000137A  4EB9 000014A2            306              JSR     T_AND_PRINT_SRC_EA  *OR same bit pattern as AND
00001380  4C9F 0480                307              MOVEM.W (SP)+,A2/D7
00001384                           308              
00001384  BC3C 0001                309              CMP.B   #$1,D6              *if D6 has $1 that means that the test failed and now print INVALID EA    
00001388                           310  
00001388  6700 1602                311              BEQ     INVAL_EA_NO_RTS     
0000138C                           312              
0000138C                           313              
0000138C                           314              * TEST PRINT DEST MODE AND REGISTER
0000138C  3E12                     315              MOVE.W  (A2),D7
0000138E  48A7 0120                316              MOVEM.W A2/D7,-(SP)
00001392  4EB9 000014E0            317              JSR     T_AND_PRINT_DEST_EA     *OR same bit pattern as AND
00001398  4C9F 0480                318              MOVEM.W (SP)+,A2/D7
0000139C                           319              
0000139C  BC3C 0001                320              CMP.B   #$1,D6              *if D6 has $1 that means that the test failed and now print INVALID EA    
000013A0                           321  
000013A0  6700 15EA                322              BEQ     INVAL_EA_NO_RTS
000013A4                           323              
000013A4                           324  
000013A4                           325              *GET SOURCE SUB
000013A4  3E12                     326              MOVE.W  (A2),D7
000013A6  48A7 0120                327              MOVEM.W A2/D7,-(SP)
000013AA  4EB9 00001668            328              JSR     AND_PRINT_SRC_EA        *OR same bit pattern as AND
000013B0  4C9F 0480                329              MOVEM.W (SP)+,A2/D7
000013B4                           330              
000013B4                           331               * PRINT COMMA
000013B4  43F9 00002AB0            332              LEA     MSG_COMMA,A1
000013BA  103C 000E                333              MOVE.B  #14,D0
000013BE  4E4F                     334              TRAP    #15
000013C0                           335              
000013C0                           336              * PRINT DEST MODE AND REGISTER
000013C0  3E12                     337              MOVE.W  (A2),D7
000013C2  48A7 0120                338              MOVEM.W A2/D7,-(SP)
000013C6  4EB9 000016A0            339              JSR     AND_PRINT_DEST_EA       *OR same bit pattern as AND
000013CC  4C9F 0480                340              MOVEM.W (SP)+,A2/D7
000013D0                           341  
000013D0                           342              
000013D0  344C                     343              MOVEA.W A4,A2           *move A3 to A2 since absolute address may have been used
000013D2  548A                     344              ADDA.L  #$2,A2          * Increase counter by long
000013D4  4287                     345              CLR.L   D7
000013D6  43F9 00002B12            346              LEA     BLANK,A1        * PRINT BLANK LINE to prepare for next line
000013DC  103C 000E                347              MOVE.B  #14,D0
000013E0  4E4F                     348              TRAP    #15
000013E2                           349  
000013E2  6000 FE08                350              BRA     MAIN_LOOP       * Branch back up to main loop
000013E6                           351  
000013E6                           352  
000013E6                           353  AND_SIZE_SUB   *print the size of and
000013E6  3E12                     354              MOVE.W  (A2),D7
000013E8  EF4F                     355              LSL.W   #7,D7   *get rid of first 6 bits of sub opcode
000013EA  363C 000D                356              MOVE.W  #13,D3
000013EE  E66F                     357              LSR.W   D3,D7   *shift D7 to right 13 to get the opmode
000013F0  BE3C 0000                358              CMP.B   #$0,D7
000013F4  6700 10F4                359              BEQ     BYTE
000013F8  BE3C 0001                360              CMP.B   #$1,D7
000013FC  6700 10FC                361              BEQ     WORD
00001400  BE3C 0002                362              CMP.B   #$2,D7
00001404  6700 1104                363              BEQ     LONG
00001408  BE3C 0004                364              CMP.B   #$4,D7
0000140C  6700 10DC                365              BEQ     BYTE
00001410  BE3C 0005                366              CMP.B   #$5,D7
00001414  6700 10E4                367              BEQ     WORD
00001418  BE3C 0006                368              CMP.B   #$6,D7
0000141C  6700 10EC                369              BEQ     LONG
00001420  6000 10F8                370              BRA     EXIT
00001424                           371              *ELSE BRANCH TO INVALID EA
00001424                           372  
00001424                           373  T_SOURCE_AND_EA  
00001424  3E12                     374              MOVE.W  (A2),D7
00001426  760A                     375              MOVE.L  #10,D3
00001428  E76F                     376              LSL.W   D3,D7   *shift D7 to right 13 to get the register
0000142A  760D                     377              MOVE.L  #13,D3
0000142C  E66F                     378              LSR.W   D3,D7   *shift D7 to right 13 to get the register
0000142E                           379  
0000142E  BE3C 0000                380              CMP.B   #$0,D7          *mode is Dn
00001432  6700 11C0                381              BEQ     GOOD
00001436  BE3C 0001                382              CMP.B   #$1,D7          
0000143A  6700 1548                383              BEQ     INVALID_EA
0000143E  BE3C 0002                384              CMP.B   #$2,D7             *mode is (An)
00001442  6700 11B0                385              BEQ     GOOD       *(An) 
00001446  BE3C 0003                386              CMP.B   #$3,D7
0000144A  6700 11A8                387              BEQ     GOOD      *(An)+
0000144E  BE3C 0004                388              CMP.B   #$4,D7
00001452  6700 11A0                389              BEQ     GOOD      *-(An)
00001456  BE3C 0007                390              CMP.B   #$7,D7
0000145A  6700 00C0                391              BEQ     T_AND_IMM_REG_S      *(xxx).W or (xxx).L or #<data>
0000145E  6000 1524                392              BRA     INVALID_EA
00001462                           393  
00001462                           394  T_DEST_AND_EA  
00001462  4287                     395              CLR.L   D7
00001464  3E12                     396              MOVE.W  (A2),D7
00001466  760A                     397              MOVE.L  #10,D3
00001468  E76F                     398              LSL.W   D3,D7   *shift D7 to right 10 to get the mode
0000146A  760D                     399              MOVE.L  #13,D3
0000146C  E66F                     400              LSR.W   D3,D7   *shift D7 to right 13 to get the mode
0000146E                           401  
0000146E  BE3C 0000                402              CMP.B   #$0,D7          *mode is Dn
00001472  6700 1180                403              BEQ     GOOD 
00001476  BE3C 0001                404              CMP.B   #$1,D7          
0000147A  6700 1508                405              BEQ     INVALID_EA
0000147E  BE3C 0002                406              CMP.B   #$2,D7             *mode is (An)
00001482  6700 1170                407              BEQ     GOOD      *(An) 
00001486  BE3C 0003                408              CMP.B   #$3,D7
0000148A  6700 1168                409              BEQ     GOOD      *(An)+
0000148E  BE3C 0004                410              CMP.B   #$4,D7
00001492  6700 1160                411              BEQ     GOOD      *-(An)
00001496  BE3C 0007                412              CMP.B   #$7,D7
0000149A  6700 010C                413              BEQ     T_AND_IMM_REG_D      *(xxx).W or (xxx).L
0000149E  6000 14E4                414              BRA     INVALID_EA
000014A2                           415              
000014A2                           416  T_AND_PRINT_SRC_EA
000014A2  4287                     417              CLR.L   D7
000014A4  3E12                     418              MOVE.W  (A2),D7
000014A6  EF4F                     419              LSL.W   #7,D7   *get rid of first 6 bits of and opcode
000014A8  760D                     420              MOVE.L  #13,D3
000014AA  E66F                     421              LSR.W   D3,D7   *shift D7 to right 13 to get the opmode
000014AC                           422              
000014AC  BE3C 0000                423              CMP.B   #$0,D7
000014B0  6700 FF72                424              BEQ     T_SOURCE_AND_EA  *DEST ea is DN
000014B4  BE3C 0001                425              CMP.B   #$1,D7
000014B8  6700 FF6A                426              BEQ     T_SOURCE_AND_EA  *DEST ea is DN
000014BC  BE3C 0002                427              CMP.B   #$2,D7
000014C0  6700 FF62                428              BEQ     T_SOURCE_AND_EA  *DEST ea is DN
000014C4  BE3C 0004                429              CMP.B   #$4,D7
000014C8  6700 112A                430              BEQ     GOOD   *SOURCE ea is DN
000014CC  BE3C 0005                431              CMP.B   #$5,D7
000014D0  6700 1122                432              BEQ     GOOD   *SOURCE ea is DN
000014D4  BE3C 0006                433              CMP.B   #$6,D7
000014D8  6700 111A                434              BEQ     GOOD  *SOURCE ea is DN
000014DC  6000 14A6                435              BRA     INVALID_EA
000014E0                           436              
000014E0                           437              
000014E0                           438  
000014E0                           439  T_AND_PRINT_DEST_EA
000014E0  3E12                     440              MOVE.W  (A2),D7
000014E2  EF4F                     441              LSL.W   #7,D7   *get rid of first 6 bits of sub opcode
000014E4  760D                     442              MOVE.L  #13,D3
000014E6  E66F                     443              LSR.W   D3,D7   *shift D7 to right 13 to get the opmode
000014E8                           444              
000014E8  BE3C 0000                445              CMP.B   #$0,D7
000014EC  6700 1106                446              BEQ     GOOD  *DEST ea is DN
000014F0  BE3C 0001                447              CMP.B   #$1,D7
000014F4  6700 10FE                448              BEQ     GOOD  *DEST ea is DN
000014F8  BE3C 0002                449              CMP.B   #$2,D7
000014FC  6700 10F6                450              BEQ     GOOD  *DEST ea is DN
00001500  BE3C 0004                451              CMP.B   #$4,D7
00001504  6700 FF5C                452              BEQ     T_DEST_AND_EA   *source ea is DN
00001508  BE3C 0005                453              CMP.B   #$5,D7
0000150C  6700 FF54                454              BEQ     T_DEST_AND_EA   *source ea is DN
00001510  BE3C 0006                455              CMP.B   #$6,D7
00001514  6700 FF4C                456              BEQ     T_DEST_AND_EA   *source ea is DN
00001518  6000 146A                457              BRA     INVALID_EA
0000151C                           458  
0000151C                           459  T_AND_IMM_REG_S *EA is source for and opcode
0000151C  3E12                     460              MOVE.W  (A2),D7
0000151E  760D                     461              MOVE.L  #13,D3
00001520  E76F                     462              LSL.W   D3,D7   *shift D7 to right 13 to get the register
00001522  E66F                     463              LSR.W   D3,D7   *shift D7 to right 13 to get the register
00001524                           464              
00001524  BE3C 0000                465              CMP.B   #$0,D7
00001528  6700 10CA                466              BEQ     GOOD  *word absolute address
0000152C  BE3C 0001                467              CMP.B   #$1,D7
00001530  6700 10C2                468              BEQ     GOOD  *long absolute address
00001534  BE3C 0004                469              CMP.B   #$4,D7
00001538  6700 0006                470              BEQ     T_AND_IMM_DATA_S 
0000153C                           471              
0000153C  6000 1446                472              BRA     INVALID_EA
00001540                           473              
00001540                           474  T_AND_IMM_DATA_S
00001540                           475              
00001540  3E14                     476              MOVE.W  (A4),D7
00001542  EF4F                     477              LSL.W   #7,D7
00001544  760D                     478              MOVE.L  #13,D3
00001546                           479              
00001546  E66F                     480              LSR.W   D3,D7       * SHIFT TO SIZE FIELD
00001548  BE3C 0000                481              CMP.B   #$0,D7
0000154C  6700 10A6                482              BEQ     GOOD
00001550  BE3C 0001                483              CMP.B   #$1,D7
00001554  6700 109E                484              BEQ     GOOD
00001558  BE3C 0002                485              CMP.B   #$2,D7
0000155C  6700 1096                486              BEQ     GOOD
00001560  BE3C 0004                487              CMP.B   #$4,D7
00001564  6700 108E                488              BEQ     GOOD
00001568  BE3C 0005                489              CMP.B   #$5,D7
0000156C  6700 1086                490              BEQ     GOOD
00001570  BE3C 0006                491              CMP.B   #$6,D7
00001574  6700 107E                492              BEQ     GOOD
00001578                           493              *if neither then it is an error
00001578  6000 140A                494              BRA     INVALID_EA
0000157C                           495  
0000157C                           496  T_AND_ADDY_R_SNP    *An but cannot be byte for opcode size of and
0000157C  3E14                     497              MOVE.W  (A4),D7
0000157E  EF4F                     498              LSL.W   #7,D7
00001580                           499              
00001580  760D                     500              MOVE.L  #13,D3
00001582  E66F                     501              LSR.W   D3,D7
00001584  BE3C 0001                502              CMP.B   #$1,D7
00001588  6700 106A                503              BEQ     GOOD 
0000158C  BE3C 0002                504              CMP.B   #$2,D7
00001590  6700 1062                505              BEQ     GOOD
00001594  BE3C 0005                506              CMP.B   #$5,D7
00001598  6700 105A                507              BEQ     GOOD
0000159C  BE3C 0006                508              CMP.B   #$6,D7
000015A0  6700 1052                509              BEQ     GOOD
000015A4                           510              *INVALID EA
000015A4  6000 13DE                511              BRA     INVALID_EA
000015A8                           512  
000015A8                           513              
000015A8                           514  T_AND_IMM_REG_D *EA is destination for and opcode
000015A8  3E12                     515              MOVE.W  (A2),D7
000015AA  760D                     516              MOVE.L  #13,D3
000015AC  E76F                     517              LSL.W   D3,D7   *shift D7 to left 13 to get the register
000015AE  E66F                     518              LSR.W   D3,D7   *shift D7 to right 13 to get the register
000015B0                           519              
000015B0  BE3C 0000                520              CMP.B   #$0,D7
000015B4  6700 103E                521              BEQ     GOOD  *word absolute address
000015B8  BE3C 0001                522              CMP.B   #$1,D7
000015BC  6700 1036                523              BEQ     GOOD  *long absolute address
000015C0  6000 13C2                524              BRA     INVALID_EA
000015C4                           525  
000015C4                           526  
000015C4                           527  SOURCE_AND_EA  
000015C4  3E12                     528              MOVE.W  (A2),D7
000015C6  760A                     529              MOVE.L  #10,D3
000015C8  E76F                     530              LSL.W   D3,D7   *shift D7 to right 13 to get the register
000015CA  760D                     531              MOVE.L  #13,D3
000015CC  E66F                     532              LSR.W   D3,D7   *shift D7 to right 13 to get the register
000015CE                           533  
000015CE  BE3C 0000                534              CMP.B   #$0,D7          *mode is Dn
000015D2  6700 006E                535              BEQ     F_AND_DN 
000015D6  BE3C 0001                536              CMP.B   #$1,D7          mode is An NOT ALLOWED
000015DA  6700 13A8                537              BEQ     INVALID_EA
000015DE  BE3C 0002                538              CMP.B   #$2,D7             *mode is (An)
000015E2  6700 11B8                539              BEQ     ADDY_R_SP       *(An) 
000015E6  BE3C 0003                540              CMP.B   #$3,D7
000015EA  6700 122A                541              BEQ     ADDY_R_SPI      *(An)+
000015EE  BE3C 0004                542              CMP.B   #$4,D7
000015F2  6700 12B4                543              BEQ     ADDY_R_SPD      *-(An)
000015F6  BE3C 0007                544              CMP.B   #$7,D7
000015FA  6700 00DA                545              BEQ     AND_IMM_REG_S      *(xxx).W or (xxx).L or #<data>
000015FE  6000 1384                546              BRA     INVALID_EA
00001602                           547  
00001602                           548  DEST_AND_EA  
00001602  4287                     549              CLR.L   D7
00001604  3E12                     550              MOVE.W  (A2),D7
00001606  760A                     551              MOVE.L  #10,D3
00001608  E76F                     552              LSL.W   D3,D7   *shift D7 to right 10 to get the mode
0000160A  760D                     553              MOVE.L  #13,D3
0000160C  E66F                     554              LSR.W   D3,D7   *shift D7 to right 13 to get the mode
0000160E                           555  
0000160E  BE3C 0000                556              CMP.B   #$0,D7          *mode is Dn
00001612  6700 002E                557              BEQ     F_AND_DN 
00001616  BE3C 0001                558              CMP.B   #$1,D7          
0000161A  6700 1368                559              BEQ     INVALID_EA
0000161E  BE3C 0002                560              CMP.B   #$2,D7             *mode is (An)
00001622  6700 1178                561              BEQ     ADDY_R_SP       *(An) 
00001626  BE3C 0003                562              CMP.B   #$3,D7
0000162A  6700 11EA                563              BEQ     ADDY_R_SPI      *(An)+
0000162E  BE3C 0004                564              CMP.B   #$4,D7
00001632  6700 1274                565              BEQ     ADDY_R_SPD      *-(An)
00001636  BE3C 0007                566              CMP.B   #$7,D7
0000163A  6700 0128                567              BEQ     AND_IMM_REG_D      *(xxx).W or (xxx).L
0000163E  6000 1344                568              BRA     INVALID_EA
00001642                           569  
00001642                           570  F_AND_DN
00001642  4287                     571              CLR.L   D7
00001644  3E12                     572              MOVE.W  (A2),D7
00001646  E94F                     573              LSL.W   #4,D7   *get rid of first 6 bits of sub opcode
00001648  760D                     574              MOVE.L  #13,D3
0000164A  E66F                     575              LSR.W   D3,D7   *shift D7 to right 13 to get the register
0000164C  43F9 00002B0A            576              LEA     MSG_D,A1
00001652  103C 000E                577              MOVE.B  #14,D0
00001656  4E4F                     578              TRAP    #15
00001658  4281                     579              CLR.L   D1
0000165A  7410                     580              MOVE.L  #16,D2
0000165C  3207                     581              MOVE.W  D7,D1
0000165E  103C 000F                582              MOVE.B  #15,D0
00001662  4E4F                     583              TRAP    #15
00001664  6000 0EB4                584              BRA EXIT      
00001668                           585              
00001668                           586              
00001668                           587  AND_PRINT_SRC_EA
00001668  4287                     588              CLR.L   D7
0000166A  3E12                     589              MOVE.W  (A2),D7
0000166C  EF4F                     590              LSL.W   #7,D7   *get rid of first 6 bits of sub opcode
0000166E  760D                     591              MOVE.L  #13,D3
00001670  E66F                     592              LSR.W   D3,D7   *shift D7 to right 13 to get the opmode
00001672                           593              
00001672  BE3C 0000                594              CMP.B   #$0,D7
00001676  6700 FF4C                595              BEQ     SOURCE_AND_EA  *DEST ea is DN
0000167A  BE3C 0001                596              CMP.B   #$1,D7
0000167E  6700 FF44                597              BEQ     SOURCE_AND_EA  *DEST ea is DN
00001682  BE3C 0002                598              CMP.B   #$2,D7
00001686  6700 FF3C                599              BEQ     SOURCE_AND_EA  *DEST ea is DN
0000168A  BE3C 0004                600              CMP.B   #$4,D7
0000168E  67B2                     601              BEQ     F_AND_DN   *SOURCE ea is DN
00001690  BE3C 0005                602              CMP.B   #$5,D7
00001694  67AC                     603              BEQ     F_AND_DN   *SOURCE ea is DN
00001696  BE3C 0006                604              CMP.B   #$6,D7
0000169A  67A6                     605              BEQ     F_AND_DN   *SOURCE ea is DN
0000169C  6000 12E6                606              BRA     INVALID_EA
000016A0                           607  
000016A0                           608  AND_PRINT_DEST_EA
000016A0  3E12                     609              MOVE.W  (A2),D7
000016A2  EF4F                     610              LSL.W   #7,D7   *get rid of first 6 bits of sub opcode
000016A4  760D                     611              MOVE.L  #13,D3
000016A6  E66F                     612              LSR.W   D3,D7   *shift D7 to right 13 to get the opmode
000016A8                           613              
000016A8  BE3C 0000                614              CMP.B   #$0,D7
000016AC  6794                     615              BEQ     F_AND_DN  *DEST ea is DN
000016AE  BE3C 0001                616              CMP.B   #$1,D7
000016B2  678E                     617              BEQ     F_AND_DN  *DEST ea is DN
000016B4  BE3C 0002                618              CMP.B   #$2,D7
000016B8  6788                     619              BEQ     F_AND_DN  *DEST ea is DN
000016BA  BE3C 0004                620              CMP.B   #$4,D7
000016BE  6700 FF42                621              BEQ     DEST_AND_EA   *source ea is DN
000016C2  BE3C 0005                622              CMP.B   #$5,D7
000016C6  6700 FF3A                623              BEQ     DEST_AND_EA   *source ea is DN
000016CA  BE3C 0006                624              CMP.B   #$6,D7
000016CE  6700 FF32                625              BEQ     DEST_AND_EA   *source ea is DN
000016D2  6000 12B0                626              BRA     INVALID_EA
000016D6                           627              
000016D6                           628  
000016D6                           629  AND_IMM_REG_S *EA is source for and opcode
000016D6  3E12                     630              MOVE.W  (A2),D7
000016D8  760D                     631              MOVE.L  #13,D3
000016DA  E76F                     632              LSL.W   D3,D7   *shift D7 to right 13 to get the register
000016DC  E66F                     633              LSR.W   D3,D7   *shift D7 to right 13 to get the register
000016DE                           634              
000016DE  BE3C 0000                635              CMP.B   #$0,D7
000016E2  6700 0FA0                636              BEQ     W_ADDY  *word absolute address
000016E6  BE3C 0001                637              CMP.B   #$1,D7
000016EA  6700 0FB8                638              BEQ     L_ADDY  *long absolute address
000016EE  BE3C 0004                639              CMP.B   #$4,D7
000016F2  6700 0006                640              BEQ     AND_IMM_DATA_S 
000016F6                           641              
000016F6  6000 128C                642              BRA     INVALID_EA
000016FA                           643              
000016FA                           644  AND_IMM_DATA_S
000016FA                           645              
000016FA  3E14                     646              MOVE.W  (A4),D7
000016FC  EF4F                     647              LSL.W   #7,D7
000016FE  760D                     648              MOVE.L  #13,D3
00001700                           649              
00001700  548C                     650              ADDA.L  #$2,A4      *increment A4 by a word 
00001702  E66F                     651              LSR.W   D3,D7       * SHIFT TO SIZE FIELD
00001704  BE3C 0000                652              CMP.B   #$0,D7
00001708  6700 1006                653              BEQ     IMM_DATA_SW
0000170C  BE3C 0001                654              CMP.B   #$1,D7
00001710  6700 0FFE                655              BEQ     IMM_DATA_SW
00001714  BE3C 0002                656              CMP.B   #$2,D7
00001718  6700 0FD0                657              BEQ     IMM_DATA_SL
0000171C  BE3C 0004                658              CMP.B   #$4,D7
00001720  6700 0FEE                659              BEQ     IMM_DATA_SW
00001724  BE3C 0005                660              CMP.B   #$5,D7
00001728  6700 0FE6                661              BEQ     IMM_DATA_SW
0000172C  BE3C 0006                662              CMP.B   #$6,D7
00001730  6700 0FB8                663              BEQ     IMM_DATA_SL
00001734                           664              *if neither then it is an error
00001734  6000 124E                665              BRA     INVALID_EA
00001738                           666  
00001738                           667  AND_ADDY_R_SNP    *An but cannot be byte for opcode size of and
00001738  3E14                     668              MOVE.W  (A4),D7
0000173A  EF4F                     669              LSL.W   #7,D7
0000173C                           670              
0000173C  760D                     671              MOVE.L  #13,D3
0000173E  E66F                     672              LSR.W   D3,D7
00001740  BE3C 0001                673              CMP.B   #$1,D7
00001744  6700 100E                674              BEQ     ADDY_R_SNP 
00001748  BE3C 0002                675              CMP.B   #$2,D7
0000174C  6700 1006                676              BEQ     ADDY_R_SNP
00001750  BE3C 0005                677              CMP.B   #$5,D7
00001754  6700 0FFE                678              BEQ     ADDY_R_SNP 
00001758  BE3C 0006                679              CMP.B   #$6,D7
0000175C  6700 0FF6                680              BEQ     ADDY_R_SNP
00001760                           681              *INVALID EA
00001760  6000 1222                682              BRA     INVALID_EA
00001764                           683  
00001764                           684              
00001764                           685  AND_IMM_REG_D *EA is destination for and opcode
00001764  3E12                     686              MOVE.W  (A2),D7
00001766  760D                     687              MOVE.L  #13,D3
00001768  E76F                     688              LSL.W   D3,D7   *shift D7 to left 13 to get the register
0000176A  E66F                     689              LSR.W   D3,D7   *shift D7 to right 13 to get the register
0000176C                           690              
0000176C  BE3C 0000                691              CMP.B   #$0,D7
00001770  6700 0F12                692              BEQ     W_ADDY  *word absolute address
00001774  BE3C 0001                693              CMP.B   #$1,D7
00001778  6700 0F2A                694              BEQ     L_ADDY  *long absolute address
0000177C  6000 1206                695              BRA     INVALID_EA
00001780                           696   
00001780                           697  MATCH_NOP
00001780  220A                     698              MOVE.L  A2,D1
00001782  143C 0010                699              MOVE.B  #16,D2
00001786  103C 000F                700              MOVE.B  #15,D0
0000178A  4E4F                     701              TRAP    #15
0000178C                           702              
0000178C  43F9 00002A82            703              LEA     MSG_NOP,A1
00001792  103C 000E                704              MOVE.B  #14,D0
00001796  4E4F                     705              TRAP    #15
00001798                           706              
00001798  344C                     707              MOVEA.W A4,A2             *move A3 to A2 since absolute address may have been used
0000179A  548A                     708              ADDA.L  #$2,A2          * Increase counter by long
0000179C                           709              
0000179C  43F9 00002B12            710              LEA     BLANK,A1        * PRINT BLANK LINE to prepare for next line
000017A2  103C 000E                711              MOVE.B  #14,D0
000017A6  4E4F                     712              TRAP    #15
000017A8                           713  
000017A8  6000 FA42                714              BRA     MAIN_LOOP       * Branch back up to main loop
000017AC                           715  MATCH_NOT
000017AC  220A                     716              MOVE.L  A2,D1
000017AE  143C 0010                717              MOVE.B  #16,D2
000017B2  103C 000F                718              MOVE.B  #15,D0
000017B6  4E4F                     719              TRAP    #15
000017B8                           720              
000017B8  43F9 00002A51            721              LEA     MSG_NOT,A1
000017BE  103C 000E                722              MOVE.B  #14,D0
000017C2  4E4F                     723              TRAP    #15
000017C4                           724              
000017C4  3E12                     725              MOVE.W  (A2),D7
000017C6                           726               *TEST GET SOURCE SUB
000017C6  3E12                     727              MOVE.W  (A2),D7
000017C8  48A7 0120                728              MOVEM.W A2/D7,-(SP)
000017CC  4EB9 0000180E            729              JSR     SIZE_NOT
000017D2  4C9F 0480                730              MOVEM.W (SP)+,A2/D7
000017D6                           731              
000017D6  48A7 0120                732              MOVEM.W A2/D7,-(SP)
000017DA  4EB9 00001828            733              JSR     T_NOT_EA
000017E0  4C9F 0480                734              MOVEM.W (SP)+,A2/D7
000017E4                           735              
000017E4  BC3C 0001                736              CMP.B   #$1,D6              *if D6 has $1 that means that the test failed and now print 
000017E8                           737                                          *INVALID_EA
000017E8  6700 11A2                738              BEQ     INVAL_EA_NO_RTS
000017EC                           739              
000017EC                           740              
000017EC  48A7 0120                741              MOVEM.W A2/D7,-(SP)
000017F0  4EB9 00001882            742              JSR     NOT_EA
000017F6  4C9F 0480                743              MOVEM.W (SP)+,A2/D7
000017FA                           744              
000017FA  344C                     745              MOVEA.W A4,A2             *move A3 to A2 since absolute address may have been used
000017FC  548A                     746              ADDA.L  #$2,A2          * Increase counter by long
000017FE                           747              
000017FE  43F9 00002B12            748              LEA     BLANK,A1        * PRINT BLANK LINE to prepare for next line
00001804  103C 000E                749              MOVE.B  #14,D0
00001808  4E4F                     750              TRAP    #15
0000180A                           751  
0000180A  6000 F9E0                752              BRA     MAIN_LOOP       * Branch back up to main loop
0000180E                           753  
0000180E                           754  
0000180E                           755  SIZE_NOT
0000180E  EC0F                     756              LSR.B   #6,D7
00001810  BE3C 0000                757              CMP.B   #$0,D7
00001814  6700 0CD4                758              BEQ     BYTE
00001818  BE3C 0001                759              CMP.B   #$1,D7
0000181C  6700 0CDC                760              BEQ     WORD
00001820  BE3C 0002                761              CMP.B   #$2,D7
00001824  6700 0CE4                762              BEQ     LONG
00001828                           763  
00001828                           764              
00001828                           765  T_NOT_EA
00001828  3E12                     766              MOVE.W  (A2),D7
0000182A  760A                     767              MOVE.L  #10,D3
0000182C  E76F                     768              LSL.W   D3,D7   *shift D7 to right 13 to get the register
0000182E  760D                     769              MOVE.L  #13,D3
00001830  E66F                     770              LSR.W   D3,D7   *shift D7 to right 13 to get the register
00001832                           771  
00001832  BE3C 0000                772              CMP.B   #$0,D7          *mode is Dn
00001836  6700 0DBC                773              BEQ     GOOD            *ea valid
0000183A  BE3C 0001                774              CMP.B   #$1,D7          
0000183E  6700 1144                775              BEQ     INVALID_EA
00001842  BE3C 0002                776              CMP.B   #$2,D7             *mode is (An)
00001846  6700 0DAC                777              BEQ     GOOD       *(An) 
0000184A  BE3C 0003                778              CMP.B   #$3,D7
0000184E  6700 0DA4                779              BEQ     GOOD      *(An)+
00001852  BE3C 0004                780              CMP.B   #$4,D7
00001856  6700 0D9C                781              BEQ     GOOD      *-(An)
0000185A  BE3C 0007                782              CMP.B   #$7,D7
0000185E  6700 0006                783              BEQ     T_NOT_IMM_REG     *(xxx).W or (xxx).L or #<data>
00001862  6000 1120                784              BRA     INVALID_EA
00001866                           785              
00001866                           786  T_NOT_IMM_REG 
00001866  3E12                     787              MOVE.W  (A2),D7
00001868  760D                     788              MOVE.L  #13,D3
0000186A  E76F                     789              LSL.W   D3,D7
0000186C  E66F                     790              LSR.W   D3,D7
0000186E  BE3C 0000                791              CMP.B   #$0,D7
00001872  6700 0D80                792              BEQ     GOOD  *word absolute address
00001876  BE3C 0001                793              CMP.B   #$1,D7
0000187A  6700 0D78                794              BEQ     GOOD  *long absolute address
0000187E  6000 1104                795              BRA     INVALID_EA  
00001882                           796  
00001882                           797  NOT_EA
00001882  3E12                     798              MOVE.W  (A2),D7
00001884  760A                     799              MOVE.L  #10,D3
00001886  E76F                     800              LSL.W   D3,D7   *shift D7 to right 13 to get the register
00001888  760D                     801              MOVE.L  #13,D3
0000188A  E66F                     802              LSR.W   D3,D7   *shift D7 to right 13 to get the register
0000188C                           803  
0000188C  BE3C 0000                804              CMP.B   #$0,D7
00001890  6700 10A8                805              BEQ     DATA_R_S 
00001894  BE3C 0001                806              CMP.B   #$1,D7
00001898  6700 10EA                807              BEQ     INVALID_EA      *An
0000189C  BE3C 0002                808              CMP.B   #$2,D7
000018A0  6700 0EFA                809              BEQ     ADDY_R_SP       *(An)
000018A4  BE3C 0003                810              CMP.B   #$3,D7
000018A8  6700 0F6C                811              BEQ     ADDY_R_SPI      *(An)+
000018AC  BE3C 0004                812              CMP.B   #$4,D7
000018B0  6700 0FF6                813              BEQ     ADDY_R_SPD      *-(An)
000018B4  BE3C 0007                814              CMP.B   #$7,D7
000018B8  6700 0006                815              BEQ     NOT_IMM_REG
000018BC  6000 10C6                816              BRA     INVALID_EA  
000018C0                           817  
000018C0                           818  NOT_IMM_REG 
000018C0  3E12                     819              MOVE.W  (A2),D7
000018C2  760D                     820              MOVE.L  #13,D3
000018C4  E76F                     821              LSL.W   D3,D7
000018C6  E66F                     822              LSR.W   D3,D7
000018C8  BE3C 0000                823              CMP.B   #$0,D7
000018CC  6700 0DB6                824              BEQ     W_ADDY  *word absolute address
000018D0  BE3C 0001                825              CMP.B   #$1,D7
000018D4  6700 0DCE                826              BEQ     L_ADDY  *long absolute address
000018D8  6000 10AA                827              BRA     INVALID_EA         
000018DC                           828  
000018DC                           829  
000018DC                           830  MATCH_LEA
000018DC  3E12                     831              MOVE.W  (A2),D7
000018DE  EF4F                     832              LSL.W  #7,D7
000018E0                           833              
000018E0  760D                     834              MOVE.L  #13,D3
000018E2  E66F                     835              LSR.W   D3,D7
000018E4                           836              
000018E4  BE3C 0007                837              CMP.B   #$7,D7  *if bits 6,7,8 are not all 1 then this is invalid LEA
000018E8  6600 F97E                838              BNE     NOOP    
000018EC                           839              
000018EC  220A                     840              MOVE.L  A2,D1
000018EE  143C 0010                841              MOVE.B  #16,D2
000018F2  103C 000F                842              MOVE.B  #15,D0
000018F6  4E4F                     843              TRAP    #15
000018F8                           844  
000018F8  43F9 00002AE9            845              LEA     MSG_LEA,A1      * move constant DATA to A1
000018FE  103C 000E                846              MOVE.B  #14,D0          * prepare to print string in (A1)
00001902  4E4F                     847              TRAP    #15        
00001904                           848              
00001904                           849               *TEST GET SOURCE SUB
00001904  3E12                     850              MOVE.W  (A2),D7
00001906  48A7 0120                851              MOVEM.W A2/D7,-(SP)
0000190A  4EB9 00001968            852              JSR     T_LEAS_EA
00001910  4C9F 0480                853              MOVEM.W (SP)+,A2/D7
00001914                           854              
00001914  BC3C 0001                855              CMP.B   #$1,D6              *if D6 has $1 that means that the test failed and now print 
00001918                           856                                          *INVALID_EA
00001918  6700 1072                857              BEQ     INVAL_EA_NO_RTS
0000191C                           858              
0000191C  3E12                     859              MOVE.W  (A2),D7
0000191E  48A7 0120                860              MOVEM.W A2/D7,-(SP)
00001922  4EB9 000019C2            861              JSR     LEA_EAS
00001928  4C9F 0480                862              MOVEM.W (SP)+,A2/D7
0000192C                           863              
0000192C                           864               * PRINT COMMA
0000192C  43F9 00002AB0            865              LEA     MSG_COMMA,A1
00001932  103C 000E                866              MOVE.B  #14,D0
00001936  4E4F                     867              TRAP    #15
00001938                           868              
00001938                           869              * PRINT ADDRESS REGISTER
00001938  760D                     870              MOVE.L  #13,D3
0000193A  E94F                     871              LSL.W   #4,D7
0000193C  E66F                     872              LSR.W   D3,D7   *get register bits 
0000193E                           873              
0000193E  43F9 00002B0C            874              LEA     MSG_A,A1    *print An
00001944  103C 000E                875              MOVE.B  #14,D0
00001948  4E4F                     876              TRAP    #15
0000194A                           877   
0000194A  7410                     878              MOVE.L  #16,D2
0000194C  2207                     879              MOVE.L  D7,D1       *print register number of An
0000194E  103C 000F                880              MOVE.B  #15,D0
00001952  4E4F                     881              TRAP    #15
00001954                           882  
00001954                           883              
00001954                           884  
00001954  344C                     885              MOVEA.W A4,A2             *move A3 to A2 since absolute address may have been used
00001956  548A                     886              ADDA.L  #$2,A2          * Increase counter by long
00001958                           887              
00001958  43F9 00002B12            888              LEA     BLANK,A1        * PRINT BLANK LINE to prepare for next line
0000195E  103C 000E                889              MOVE.B  #14,D0
00001962  4E4F                     890              TRAP    #15
00001964                           891  
00001964  6000 F886                892              BRA     MAIN_LOOP       * Branch back up to main loop
00001968                           893              
00001968                           894  T_LEAS_EA
00001968  3E12                     895              MOVE.W  (A2),D7
0000196A  760A                     896              MOVE.L  #10,D3
0000196C  E76F                     897              LSL.W   D3,D7   *shift D7 to right 13 to get the register
0000196E  760D                     898              MOVE.L  #13,D3
00001970  E66F                     899              LSR.W   D3,D7   *shift D7 to right 13 to get the register
00001972                           900  
00001972  BE3C 0000                901              CMP.B   #$0,D7          *mode is Dn
00001976  6700 100C                902              BEQ     INVALID_EA            *ea valid
0000197A  BE3C 0001                903              CMP.B   #$1,D7          
0000197E  6700 1004                904              BEQ     INVALID_EA
00001982  BE3C 0002                905              CMP.B   #$2,D7             *mode is (An)
00001986  6700 0C6C                906              BEQ     GOOD       *(An) 
0000198A  BE3C 0003                907              CMP.B   #$3,D7
0000198E  6700 0FF4                908              BEQ     INVALID_EA      *(An)+
00001992  BE3C 0004                909              CMP.B   #$4,D7
00001996  6700 0FEC                910              BEQ     INVALID_EA      *-(An)
0000199A  BE3C 0007                911              CMP.B   #$7,D7
0000199E  6700 0006                912              BEQ     T_LEAS_IMM_REG     *(xxx).W or (xxx).L or #<data>
000019A2  6000 0FE0                913              BRA     INVALID_EA
000019A6                           914  
000019A6                           915  T_LEAS_IMM_REG 
000019A6  3E12                     916              MOVE.W  (A2),D7
000019A8  760D                     917              MOVE.L  #13,D3
000019AA  E76F                     918              LSL.W   D3,D7
000019AC  E66F                     919              LSR.W   D3,D7
000019AE  BE3C 0000                920              CMP.B   #$0,D7
000019B2  6700 0C40                921              BEQ     GOOD  *word absolute address
000019B6  BE3C 0001                922              CMP.B   #$1,D7
000019BA  6700 0C38                923              BEQ     GOOD  *long absolute address
000019BE  6000 0FC4                924              BRA     INVALID_EA  
000019C2                           925  
000019C2                           926  LEA_EAS
000019C2  3E12                     927              MOVE.W  (A2),D7
000019C4  760A                     928              MOVE.L  #10,D3
000019C6  E76F                     929              LSL.W   D3,D7   *shift D7 to right 13 to get the register
000019C8  760D                     930              MOVE.L  #13,D3
000019CA  E66F                     931              LSR.W   D3,D7   *shift D7 to right 13 to get the register
000019CC                           932  
000019CC  BE3C 0000                933              CMP.B   #$0,D7          *mode is Dn
000019D0  6700 0FB2                934              BEQ     INVALID_EA            *ea valid
000019D4  BE3C 0001                935              CMP.B   #$1,D7          
000019D8  6700 0FAA                936              BEQ     INVALID_EA      *mode is An
000019DC  BE3C 0002                937              CMP.B   #$2,D7             
000019E0  6700 0DBA                938              BEQ     ADDY_R_SP       *(An)        
000019E4  BE3C 0003                939              CMP.B   #$3,D7
000019E8  6700 0F9A                940              BEQ     INVALID_EA      *(An)+
000019EC  BE3C 0004                941              CMP.B   #$4,D7
000019F0  6700 0F92                942              BEQ     INVALID_EA      *-(An)
000019F4  BE3C 0007                943              CMP.B   #$7,D7
000019F8  6700 0006                944              BEQ     LEAS_IMM_REG     *(xxx).W or (xxx).L or #<data>
000019FC  6000 0F86                945              BRA     INVALID_EA
00001A00                           946  
00001A00                           947  
00001A00                           948  LEAS_IMM_REG 
00001A00  3E12                     949              MOVE.W  (A2),D7
00001A02  760D                     950              MOVE.L  #13,D3
00001A04  E76F                     951              LSL.W   D3,D7
00001A06  E66F                     952              LSR.W   D3,D7
00001A08  BE3C 0000                953              CMP.B   #$0,D7
00001A0C  6700 0C76                954              BEQ     W_ADDY  *word absolute address
00001A10  BE3C 0001                955              CMP.B   #$1,D7
00001A14  6700 0C8E                956              BEQ     L_ADDY  *long absolute address
00001A18  6000 0F6A                957              BRA     INVALID_EA         
00001A1C                           958  
00001A1C                           959  MATCH_ADD
00001A1C  3E12                     960              MOVE.W  (A2),D7
00001A1E  EF4F                     961              LSL.W   #7,D7       *shift value in D7 to the left by 7 bits
00001A20  760D                     962              MOVE.L  #13,D3
00001A22  E66F                     963              LSR.W   D3,D7 
00001A24  BE3C 0003                964              CMP.B   #$3,D7      *check if opcode is $3 if so it is ADDA
00001A28                           965  
00001A28  6700 00DC                966              BEQ     MATCH_ADDA
00001A2C  BE3C 0007                967              CMP.B  #$7,D7     *check if opcode is $7 if so it is ADDA
00001A30  6700 00D4                968              BEQ     MATCH_ADDA
00001A34                           969              
00001A34  220A                     970              MOVE.L  A2,D1
00001A36  143C 0010                971              MOVE.B  #16,D2
00001A3A  103C 000F                972              MOVE.B  #15,D0
00001A3E  4E4F                     973              TRAP    #15
00001A40                           974              
00001A40  43F9 00002ABB            975              LEA     MSG_ADD,A1  *print out ADDA
00001A46  103C 000E                976              MOVE.B  #14,D0
00001A4A  4E4F                     977              TRAP    #15
00001A4C                           978      
00001A4C                           979             * PRINT SIZE
00001A4C  3E12                     980              MOVE.W  (A2),D7
00001A4E  48A7 0120                981              MOVEM.W A2/D7,-(SP)
00001A52  4EB9 00001ACC            982              JSR     ADD_SIZE_SUB    
00001A58  4C9F 0480                983              MOVEM.W (SP)+,A2/D7
00001A5C                           984              
00001A5C                           985               *TEST GET SOURCE SUB
00001A5C  3E12                     986              MOVE.W  (A2),D7
00001A5E  48A7 0120                987              MOVEM.W A2/D7,-(SP)
00001A62  4EB9 00001FB4            988              JSR     T_SUBTR_PRINT_SRC_EA
00001A68  4C9F 0480                989              MOVEM.W (SP)+,A2/D7
00001A6C                           990              
00001A6C  BC3C 0001                991              CMP.B   #$1,D6              *if D6 has $1 that means that the test failed and now print 
00001A70                           992                                          *INVALID_EA
00001A70  6700 0F1A                993              BEQ     INVAL_EA_NO_RTS
00001A74                           994              
00001A74                           995              
00001A74                           996              * TEST PRINT DEST MODE AND REGISTER
00001A74  3E12                     997              MOVE.W  (A2),D7
00001A76  48A7 0120                998              MOVEM.W A2/D7,-(SP)
00001A7A  4EB9 00001FF2            999              JSR     T_SUBTR_PRINT_DEST_EA
00001A80  4C9F 0480               1000              MOVEM.W (SP)+,A2/D7
00001A84                          1001              
00001A84  BC3C 0001               1002              CMP.B   #$1,D6              *if D6 has $1 that means that the test failed and now print 
00001A88  6700 0F02               1003              BEQ     INVAL_EA_NO_RTS                            *INVALID_EA
00001A8C                          1004              
00001A8C                          1005  
00001A8C                          1006              
00001A8C                          1007  
00001A8C                          1008              *GET SOURCE SUB
00001A8C  3E12                    1009              MOVE.W  (A2),D7
00001A8E  48A7 0120               1010              MOVEM.W A2/D7,-(SP)
00001A92  4EB9 000021A0           1011              JSR     SUBTR_PRINT_SRC_EA  *print out source ea
00001A98  4C9F 0480               1012              MOVEM.W (SP)+,A2/D7
00001A9C                          1013              
00001A9C                          1014               * PRINT COMMA
00001A9C  43F9 00002AB0           1015              LEA     MSG_COMMA,A1
00001AA2  103C 000E               1016              MOVE.B  #14,D0
00001AA6  4E4F                    1017              TRAP    #15
00001AA8                          1018              
00001AA8                          1019              * PRINT DEST MODE AND REGISTER
00001AA8  3E12                    1020              MOVE.W  (A2),D7
00001AAA  48A7 0120               1021              MOVEM.W A2/D7,-(SP)
00001AAE  4EB9 000021D8           1022              JSR     SUBTR_PRINT_DEST_EA *print out dest ea
00001AB4  4C9F 0480               1023              MOVEM.W (SP)+,A2/D7
00001AB8                          1024  
00001AB8                          1025  
00001AB8                          1026              
00001AB8  344C                    1027              MOVEA.W A4,A2             *move A3 to A2 since absolute address may have been used
00001ABA  548A                    1028              ADDA.L  #$2,A2          * Increase counter by long
00001ABC                          1029              
00001ABC  43F9 00002B12           1030              LEA     BLANK,A1        * PRINT BLANK LINE to prepare for next line
00001AC2  103C 000E               1031              MOVE.B  #14,D0
00001AC6  4E4F                    1032              TRAP    #15
00001AC8                          1033  
00001AC8  6000 F722               1034              BRA     MAIN_LOOP       * Branch back up to main loop
00001ACC                          1035  
00001ACC                          1036  ADD_SIZE_SUB                           * ADD SIZE SUBROUTINE START
00001ACC                          1037              * SHIFT TO SIZE FIELD
00001ACC                          1038              
00001ACC  EF4F                    1039              LSL.W   #7,D7
00001ACE  760D                    1040              MOVE.L  #13,D3
00001AD0  E66F                    1041              LSR.W   D3,D7
00001AD2                          1042              * RUN COMPARISONS
00001AD2  BE3C 0000               1043              CMP.B   #$0,D7
00001AD6  6700 0A12               1044              BEQ     BYTE
00001ADA  BE3C 0001               1045              CMP.B   #$1,D7
00001ADE  6700 0A1A               1046              BEQ     WORD
00001AE2  BE3C 0002               1047              CMP.B   #$2,D7
00001AE6  6700 0A22               1048              BEQ     LONG
00001AEA  BE3C 0004               1049              CMP.B   #$4,D7
00001AEE  6700 09FA               1050              BEQ     BYTE
00001AF2  BE3C 0005               1051              CMP.B   #$5,D7
00001AF6  6700 0A02               1052              BEQ     WORD
00001AFA  BE3C 0006               1053              CMP.B   #$6,D7
00001AFE  6700 0A0A               1054              BEQ     LONG
00001B02  6000 0A16               1055              BRA     EXIT
00001B06                          1056              
00001B06                          1057  MATCH_ADDA
00001B06  220A                    1058              MOVE.L  A2,D1
00001B08  143C 0010               1059              MOVE.B  #16,D2
00001B0C  103C 000F               1060              MOVE.B  #15,D0
00001B10  4E4F                    1061              TRAP    #15
00001B12                          1062              
00001B12  43F9 00002AC2           1063              LEA     MSG_ADDA,A1     *print ADDA
00001B18  103C 000E               1064              MOVE.B  #14,D0
00001B1C  4E4F                    1065              TRAP    #15
00001B1E                          1066              
00001B1E                          1067              * PRINT SIZE
00001B1E  3E12                    1068              MOVE.W  (A2),D7
00001B20  48A7 0120               1069              MOVEM.W A2/D7,-(SP)
00001B24  4EB9 00001C78           1070              JSR     ADDA_SIZE_SUB
00001B2A  4C9F 0480               1071              MOVEM.W (SP)+,A2/D7
00001B2E                          1072              
00001B2E                          1073              *TEST EA
00001B2E  3E12                    1074              MOVE.W  (A2),D7
00001B30  48A7 0120               1075              MOVEM.W A2/D7,-(SP)
00001B34  4EB9 00001C16           1076              JSR     T_ADDA_PRINT_SRC_EA    *test ea 
00001B3A  4C9F 0480               1077              MOVEM.W (SP)+,A2/D7
00001B3E                          1078              
00001B3E                          1079  
00001B3E  BC3C 0001               1080              CMP.B   #$1,D6
00001B42  6700 0E48               1081              BEQ     INVAL_EA_NO_RTS
00001B46                          1082              
00001B46  3E12                    1083              MOVE.W  (A2),D7
00001B48  48A7 0120               1084              MOVEM.W A2/D7,-(SP)
00001B4C  4EB9 00001B96           1085              JSR     ADDA_P_SRC_EA    *print ea 
00001B52  4C9F 0480               1086              MOVEM.W (SP)+,A2/D7
00001B56                          1087              
00001B56                          1088              * PRINT COMMA
00001B56  43F9 00002AB0           1089              LEA     MSG_COMMA,A1
00001B5C  103C 000E               1090              MOVE.B  #14,D0
00001B60  4E4F                    1091              TRAP    #15
00001B62                          1092                  
00001B62  4287                    1093              CLR.L   D7
00001B64  3E12                    1094              MOVE.W  (A2),D7
00001B66                          1095              
00001B66                          1096              * PRINT ADDRESS REGISTER
00001B66  760D                    1097              MOVE.L  #13,D3
00001B68  E94F                    1098              LSL.W   #4,D7
00001B6A  E66F                    1099              LSR.W   D3,D7   *get register bits 
00001B6C                          1100              
00001B6C  43F9 00002B0C           1101              LEA     MSG_A,A1    *print An
00001B72  103C 000E               1102              MOVE.B  #14,D0
00001B76  4E4F                    1103              TRAP    #15
00001B78                          1104   
00001B78  7410                    1105              MOVE.L  #16,D2
00001B7A  2207                    1106              MOVE.L  D7,D1       *print register number of An
00001B7C  103C 000F               1107              MOVE.B  #15,D0
00001B80  4E4F                    1108              TRAP    #15
00001B82                          1109  
00001B82  344C                    1110              MOVEA.W A4,A2           *move A3 to A2 since absolute address may have been used
00001B84  548A                    1111              ADDA.L  #$2,A2          * Increase counter by long
00001B86                          1112              
00001B86  43F9 00002B12           1113              LEA     BLANK,A1        * PRINT BLANK LINE to prepare for next line
00001B8C  103C 000E               1114              MOVE.B  #14,D0
00001B90  4E4F                    1115              TRAP    #15
00001B92                          1116  
00001B92  6000 F658               1117              BRA     MAIN_LOOP       * Branch back up to main loop
00001B96                          1118  ADDA_P_SRC_EA
00001B96  3E12                    1119              MOVE.W  (A2),D7
00001B98  760A                    1120              MOVE.L  #10,D3
00001B9A  E76F                    1121              LSL.W   D3,D7   *shift D7 to right 13 to get the register
00001B9C  760D                    1122              MOVE.L  #13,D3
00001B9E  E66F                    1123              LSR.W   D3,D7   *shift D7 to right 13 to get the register
00001BA0                          1124  
00001BA0  BE3C 0000               1125              CMP.B   #$0,D7
00001BA4  6700 0D94               1126              BEQ     DATA_R_S        *Dn
00001BA8  BE3C 0001               1127              CMP.B   #$1,D7
00001BAC  6700 0BA6               1128              BEQ     ADDY_R_SNP      *An
00001BB0  BE3C 0002               1129              CMP.B   #$2,D7
00001BB4  6700 0BE6               1130              BEQ     ADDY_R_SP       *(An)
00001BB8  BE3C 0003               1131              CMP.B   #$3,D7
00001BBC  6700 0C58               1132              BEQ     ADDY_R_SPI      *(An)+
00001BC0  BE3C 0004               1133              CMP.B   #$4,D7
00001BC4  6700 0CE2               1134              BEQ     ADDY_R_SPD      *-(An)
00001BC8  BE3C 0007               1135              CMP.B   #$7,D7
00001BCC  6700 0006               1136              BEQ     AI_M_S      *immediate or absolut addy
00001BD0  6000 0948               1137              BRA     EXIT
00001BD4                          1138  
00001BD4                          1139  AI_M_S
00001BD4  3E12                    1140              MOVE.W  (A2),D7
00001BD6  760D                    1141              MOVE.L  #13,D3
00001BD8  E76F                    1142              LSL.W   D3,D7
00001BDA  E66F                    1143              LSR.W   D3,D7
00001BDC  BE3C 0000               1144              CMP.B   #$0,D7
00001BE0  6700 0AA2               1145              BEQ     W_ADDY *absolute addy word
00001BE4  BE3C 0001               1146              CMP.B   #$1,D7
00001BE8  6700 0ABA               1147              BEQ     L_ADDY *absolute addy long
00001BEC  BE3C 0004               1148              CMP.B   #$4,D7
00001BF0  6700 0006               1149              BEQ     ADDA_IMM_DATA_S *immediate data
00001BF4                          1150              
00001BF4  6000 0924               1151              BRA     EXIT
00001BF8                          1152  
00001BF8                          1153               
00001BF8                          1154  ADDA_IMM_DATA_S            
00001BF8  3E12                    1155              MOVE.W  (A2),D7
00001BFA  EF4F                    1156              LSL.W   #7,D7   *shift D7 to right 10 to get the opmode
00001BFC  760D                    1157              MOVE.L  #13,D3
00001BFE  E66F                    1158              LSR.W   D3,D7   *shift D7 to right 13 to get the register
00001C00                          1159              *check if opmode bits are 3 or 7
00001C00  548C                    1160              ADDA.L  #$2,A4 
00001C02  BE3C 0003               1161              CMP.B   #$3,D7
00001C06  6700 0B08               1162              BEQ     IMM_DATA_SW
00001C0A  BE3C 0007               1163              CMP.B   #$7,D7
00001C0E  6700 0ADA               1164              BEQ     IMM_DATA_SL
00001C12  6000 0906               1165              BRA     EXIT
00001C16                          1166              
00001C16                          1167              
00001C16                          1168  T_ADDA_PRINT_SRC_EA *test if ADDA EA is valid or not
00001C16  3E12                    1169              MOVE.W  (A2),D7
00001C18  760A                    1170              MOVE.L  #10,D3
00001C1A  E76F                    1171              LSL.W   D3,D7   *shift D7 to right 13 to get the register
00001C1C  760D                    1172              MOVE.L  #13,D3
00001C1E  E66F                    1173              LSR.W   D3,D7   *shift D7 to right 13 to get the register
00001C20                          1174  
00001C20  BE3C 0000               1175              CMP.B   #$0,D7          *mode is Dn
00001C24  6700 09CE               1176              BEQ     GOOD            *ea valid
00001C28  BE3C 0001               1177              CMP.B   #$1,D7          
00001C2C  6700 09C6               1178              BEQ     GOOD
00001C30  BE3C 0002               1179              CMP.B   #$2,D7             *mode is (An)
00001C34  6700 09BE               1180              BEQ     GOOD       *(An) 
00001C38  BE3C 0003               1181              CMP.B   #$3,D7
00001C3C  6700 09B6               1182              BEQ     GOOD      *(An)+
00001C40  BE3C 0004               1183              CMP.B   #$4,D7
00001C44  6700 09AE               1184              BEQ     GOOD      *-(An)
00001C48  BE3C 0007               1185              CMP.B   #$7,D7
00001C4C  6700 0006               1186              BEQ     T_ADDA_IMM_REG_S      *(xxx).W or (xxx).L or #<data>
00001C50  6000 0D32               1187              BRA     INVALID_EA
00001C54                          1188              
00001C54                          1189  T_ADDA_IMM_REG_S *EA is source for subtract opcode
00001C54  3E12                    1190              MOVE.W  (A2),D7
00001C56  760D                    1191              MOVE.L  #13,D3
00001C58  E76F                    1192              LSL.W   D3,D7   *shift D7 to right 13 to get the register
00001C5A  E66F                    1193              LSR.W   D3,D7   *shift D7 to right 13 to get the register
00001C5C                          1194              
00001C5C  BE3C 0000               1195              CMP.B   #$0,D7
00001C60  6700 0992               1196              BEQ     GOOD  *word absolute address
00001C64  BE3C 0001               1197              CMP.B   #$1,D7
00001C68  6700 098A               1198              BEQ     GOOD  *long absolute address
00001C6C  BE3C 0004               1199              CMP.B   #$4,D7
00001C70  6700 0982               1200              BEQ     GOOD 
00001C74                          1201              
00001C74  6000 0D0E               1202              BRA     INVALID_EA  
00001C78                          1203  
00001C78                          1204  ADDA_SIZE_SUB                           * ADDA SIZE SUBROUTINE START
00001C78                          1205              * SHIFT TO SIZE FIELD
00001C78  EF4F                    1206              LSL.W   #7,D7
00001C7A  760D                    1207              MOVE.L  #13,D3
00001C7C  E66F                    1208              LSR.W   D3,D7
00001C7E                          1209              * RUN COMPARISONS
00001C7E  BE3C 0003               1210              CMP.B   #$3,D7
00001C82  6700 0876               1211              BEQ     WORD
00001C86  BE3C 0007               1212              CMP.B   #$7,D7
00001C8A  6700 087E               1213              BEQ     LONG
00001C8E                          1214              
00001C8E  6000 0CF4               1215              BRA     INVALID_EA
00001C92                          1216              
00001C92                          1217              
00001C92                          1218  MATCH_ADDQ
00001C92                          1219              
00001C92  3E12                    1220              MOVE.W  (A2),D7
00001C94  EE0F                    1221              LSR.B   #7,D7
00001C96  BE3C 0002               1222              CMP.B   #$2,D7  *check if size bits are greater than 2 if so then NOOP
00001C9A  6E00 F5CC               1223              BGT     NOOP    
00001C9E  220A                    1224              MOVE.L  A2,D1
00001CA0  143C 0010               1225              MOVE.B  #16,D2
00001CA4  103C 000F               1226              MOVE.B  #15,D0
00001CA8  4E4F                    1227              TRAP    #15
00001CAA                          1228              
00001CAA  43F9 00002ACA           1229              LEA     MSG_ADDQ,A1 *print ADDQ 
00001CB0  103C 000E               1230              MOVE.B  #14,D0
00001CB4  4E4F                    1231              TRAP    #15
00001CB6                          1232              
00001CB6                          1233              
00001CB6                          1234              * PRINT SIZE
00001CB6  3E12                    1235              MOVE.W  (A2),D7
00001CB8  48A7 0120               1236              MOVEM.W A2/D7,-(SP)
00001CBC  4EB9 00001D68           1237              JSR     ADDQ_SIZE_SUB
00001CC2  4C9F 0480               1238              MOVEM.W (SP)+,A2/D7
00001CC6                          1239              
00001CC6                          1240              * TEST PRINT EFFECTIVE ADDRESS
00001CC6  48A7 0120               1241              MOVEM.W A2/D7,-(SP)
00001CCA  4EB9 00001DB2           1242              JSR     T_PRINT_EA_FSIXB
00001CD0  4C9F 0480               1243              MOVEM.W (SP)+,A2/D7
00001CD4                          1244              
00001CD4  BC3C 0001               1245              CMP.B   #$1,D6                 *if D6 has $1 that means that the test failed and now print INVALID EA    
00001CD8  6700 0CB2               1246              BEQ     INVAL_EA_NO_RTS
00001CDC                          1247              
00001CDC                          1248              
00001CDC                          1249              * TODO: PRINT DATA
00001CDC                          1250              * GET DATA
00001CDC  48A7 0120               1251              MOVEM.W A2/D7,-(SP)
00001CE0  4EB9 00001D86           1252              JSR     ADDQ_DATA_SUB
00001CE6  4C9F 0480               1253              MOVEM.W (SP)+,A2/D7
00001CEA                          1254              
00001CEA                          1255              * PRINT COMMA
00001CEA  43F9 00002AB0           1256              LEA     MSG_COMMA,A1
00001CF0  103C 000E               1257              MOVE.B  #14,D0
00001CF4  4E4F                    1258              TRAP    #15
00001CF6                          1259              
00001CF6                          1260              * PRINT EFFECTIVE ADDRESS
00001CF6  48A7 0120               1261              MOVEM.W A2/D7,-(SP)
00001CFA  4EB9 00001E08           1262              JSR     PRINT_EA_FSIXB
00001D00  4C9F 0480               1263              MOVEM.W (SP)+,A2/D7
00001D04                          1264  
00001D04  344C                    1265              MOVEA.W A4,A2           *move A3 to A2 since absolute address may have been used
00001D06  548A                    1266              ADDA.L  #$2,A2          * Increase counter by long
00001D08                          1267              
00001D08  43F9 00002B12           1268              LEA     BLANK,A1        * PRINT BLANK LINE to prepare for next line
00001D0E  103C 000E               1269              MOVE.B  #14,D0
00001D12  4E4F                    1270              TRAP    #15
00001D14                          1271  
00001D14  6000 F4D6               1272              BRA     MAIN_LOOP       * Branch back up to main loop
00001D18                          1273              
00001D18                          1274  
00001D18                          1275  MOVE_SIZE_SUB                           * MOVE SIZE SUBROUTINE START
00001D18                          1276              * SHIFT TO SIZE FIELD
00001D18  760C                    1277              MOVE.L  #12,D3
00001D1A  E66F                    1278              LSR.W   D3,D7
00001D1C                          1279              * RUN COMPARISONS
00001D1C  BE3C 0001               1280              CMP.B   #$1,D7
00001D20  6700 07C8               1281              BEQ     BYTE
00001D24  BE3C 0002               1282              CMP.B   #$2,D7
00001D28  6700 07E0               1283              BEQ     LONG
00001D2C  BE3C 0003               1284              CMP.B   #$3,D7
00001D30  6700 07C8               1285              BEQ     WORD
00001D34  6000 07E4               1286              BRA     EXIT
00001D38                          1287              
00001D38                          1288  MOVEA_SIZE_SUB                           * MOVE SIZE SUBROUTINE START
00001D38                          1289              * SHIFT TO SIZE FIELD
00001D38  760C                    1290              MOVE.L  #12,D3
00001D3A  E66F                    1291              LSR.W   D3,D7
00001D3C                          1292              * RUN COMPARISONS
00001D3C  BE3C 0002               1293              CMP.B   #$2,D7
00001D40  6700 07C8               1294              BEQ     LONG
00001D44  BE3C 0003               1295              CMP.B   #$3,D7
00001D48  6700 07B0               1296              BEQ     WORD
00001D4C  6000 07CC               1297              BRA     EXIT
00001D50                          1298              
00001D50                          1299  MOVEM_SIZE_SUB                           * MOVE SIZE SUBROUTINE START
00001D50                          1300              * SHIFT TO SIZE FIELD
00001D50                          1301              *MOVE.L  #12,D3
00001D50  E30F                    1302              LSL.B   #1,D7
00001D52  EE0F                    1303              LSR.B   #7,D7
00001D54                          1304              * RUN COMPARISONS
00001D54  BE3C 0000               1305              CMP.B   #$0,D7
00001D58  6700 07A0               1306              BEQ     WORD
00001D5C  BE3C 0001               1307              CMP.B   #$1,D7
00001D60  6700 07A8               1308              BEQ     LONG
00001D64  6000 07B4               1309              BRA     EXIT
00001D68                          1310  
00001D68                          1311              
00001D68                          1312  ADDQ_SIZE_SUB             * ADDQ SIZE SUBROUTINE START
00001D68                          1313              * SHIFT TO SIZE FIELD
00001D68  EC0F                    1314              LSR.B   #6,D7
00001D6A                          1315              
00001D6A                          1316              * RUN COMPARISONS
00001D6A  BE3C 0000               1317              CMP.B   #$0,D7
00001D6E  6700 077A               1318              BEQ     BYTE
00001D72  BE3C 0001               1319              CMP.B   #$1,D7
00001D76  6700 0782               1320              BEQ     WORD
00001D7A  BE3C 0002               1321              CMP.B   #$2,D7
00001D7E  6700 078A               1322              BEQ     LONG
00001D82  6000 0796               1323              BRA     EXIT
00001D86                          1324              
00001D86                          1325  ADDQ_DATA_SUB
00001D86                          1326              * PRINT # SYMBOL
00001D86  43F9 00002B1C           1327              LEA     IMDATA,A1
00001D8C  103C 000E               1328              MOVE.B  #14,D0
00001D90  4E4F                    1329              TRAP    #15
00001D92                          1330              
00001D92  43F9 00002B1A           1331              LEA     DOLLAR,A1
00001D98  4E4F                    1332              TRAP    #15
00001D9A                          1333              
00001D9A                          1334              * SHIFT TO DATA
00001D9A  E94F                    1335              LSL.W   #4,D7
00001D9C  163C 000D               1336              MOVE.B  #13,D3
00001DA0  E66F                    1337              LSR.W   D3,D7
00001DA2                          1338              
00001DA2                          1339              * PRINT DATA
00001DA2  143C 0010               1340              MOVE.B  #16,D2
00001DA6  3207                    1341              MOVE.W  D7,D1
00001DA8  103C 000F               1342              MOVE.B  #15,D0
00001DAC  4E4F                    1343              TRAP    #15
00001DAE                          1344          
00001DAE  6000 076A               1345              BRA     EXIT
00001DB2                          1346              
00001DB2                          1347  T_PRINT_EA_FSIXB         *test for first 6 bits ea which is destination
00001DB2  3E12                    1348              MOVE.W  (A2),D7
00001DB4  E50F                    1349              LSL.B   #2,D7   *get rid of destination mode bits
00001DB6  EA0F                    1350              LSR.B   #5,D7   *move source mode bits to first 3 bits of D7 
00001DB8  BE3C 0000               1351              CMP.B   #$0,D7
00001DBC  6700 0836               1352              BEQ     GOOD      
00001DC0  BE3C 0001               1353              CMP.B   #$1,D7
00001DC4  6700 082E               1354              BEQ     GOOD            *An
00001DC8  BE3C 0002               1355              CMP.B   #$2,D7
00001DCC  6700 0826               1356              BEQ     GOOD             *(An)
00001DD0  BE3C 0003               1357              CMP.B   #$3,D7
00001DD4  6700 081E               1358              BEQ     GOOD            *(An)+
00001DD8  BE3C 0004               1359              CMP.B   #$4,D7
00001DDC  6700 0816               1360              BEQ     GOOD            *-(An)
00001DE0  BE3C 0007               1361              CMP.B   #$7,D7
00001DE4  6700 0006               1362              BEQ     T_IMM_REG_FSIXB
00001DE8  6000 0B9A               1363              BRA     INVALID_EA 
00001DEC                          1364              
00001DEC                          1365  T_IMM_REG_FSIXB     *first 6 bits EA immediate data or address
00001DEC  4287                    1366              CLR.L     D7
00001DEE  3E12                    1367              MOVE.W  (A2),D7         *get A2 data back to D7
00001DF0  EB0F                    1368              LSL.B   #5,D7   *get rid of destination mode bits and source mode bits
00001DF2  EA0F                    1369              LSR.B   #5,D7   *move source register bits to first 3 bits of D7 
00001DF4  BE3C 0000               1370              CMP.B   #$0,D7
00001DF8  6700 07FA               1371              BEQ     GOOD  *word absolute address
00001DFC  BE3C 0001               1372              CMP.B   #$1,D7
00001E00  6700 07F2               1373              BEQ     GOOD  *long absolute address
00001E04  6000 0B7E               1374              BRA     INVALID_EA
00001E08                          1375  
00001E08                          1376  PRINT_EA_FSIXB      *print what first 6 bits EA represent
00001E08  E50F                    1377              LSL.B   #2,D7   *get rid of destination mode bits
00001E0A  EA0F                    1378              LSR.B   #5,D7   *move source mode bits to first 3 bits of D7 
00001E0C  BE3C 0000               1379              CMP.B   #$0,D7
00001E10  6700 0B28               1380              BEQ     DATA_R_S        *Dn
00001E14  BE3C 0001               1381              CMP.B   #$1,D7
00001E18  6700 093A               1382              BEQ     ADDY_R_SNP      *An
00001E1C  BE3C 0002               1383              CMP.B   #$2,D7
00001E20  6700 097A               1384              BEQ     ADDY_R_SP       *(An)
00001E24  BE3C 0003               1385              CMP.B   #$3,D7
00001E28  6700 09EC               1386              BEQ     ADDY_R_SPI      *(An)+
00001E2C  BE3C 0004               1387              CMP.B   #$4,D7
00001E30  6700 0A76               1388              BEQ     ADDY_R_SPD      *-(An)
00001E34  BE3C 0007               1389              CMP.B   #$7,D7
00001E38  6700 0006               1390              BEQ     IMM_REG_FSIXB
00001E3C  6000 0B46               1391              BRA     INVALID_EA  
00001E40                          1392              
00001E40                          1393  IMM_REG_FSIXB     *first 6 bits EA immediate data or address
00001E40  4287                    1394              CLR.L     D7
00001E42  3E12                    1395              MOVE.W  (A2),D7         *get A2 data back to D7
00001E44  EB0F                    1396              LSL.B   #5,D7   *get rid of destination mode bits and source mode bits
00001E46  EA0F                    1397              LSR.B   #5,D7   *move source register bits to first 3 bits of D7 
00001E48  BE3C 0000               1398              CMP.B   #$0,D7
00001E4C  6700 0836               1399              BEQ     W_ADDY  *word absolute address
00001E50  BE3C 0001               1400              CMP.B   #$1,D7
00001E54  6700 084E               1401              BEQ     L_ADDY  *long absolute address
00001E58  6000 0B2A               1402              BRA     INVALID_EA  
00001E5C                          1403              
00001E5C                          1404  MATCH_SUB
00001E5C  220A                    1405              MOVE.L  A2,D1
00001E5E  143C 0010               1406              MOVE.B  #16,D2
00001E62  103C 000F               1407              MOVE.B  #15,D0
00001E66  4E4F                    1408              TRAP    #15
00001E68                          1409              
00001E68  3E12                    1410              MOVE.W (A2),D7
00001E6A                          1411                          
00001E6A  43F9 00002AD2           1412              LEA     MSG_SUB,A1
00001E70  103C 000E               1413              MOVE.B  #14,D0
00001E74  4E4F                    1414              TRAP    #15
00001E76  3E12                    1415              MOVE.W  (A2),D7
00001E78                          1416              
00001E78                          1417              *GET SIZE SUB
00001E78  48E7 0120               1418              MOVEM.L A2/D7,-(SP)
00001E7C  4EB9 00001EF8           1419              JSR     SUBT_SIZE_SUB
00001E82  4CDF 0480               1420              MOVEM.L (SP)+,A2/D7
00001E86                          1421              
00001E86                          1422              
00001E86                          1423               *TEST GET SOURCE SUB
00001E86  3E12                    1424              MOVE.W  (A2),D7
00001E88  48E7 0120               1425              MOVEM.L A2/D7,-(SP)
00001E8C  4EB9 00001FB4           1426              JSR     T_SUBTR_PRINT_SRC_EA
00001E92  4CDF 0480               1427              MOVEM.L (SP)+,A2/D7
00001E96                          1428              
00001E96  BC3C 0001               1429              CMP.B   #$1,D6              *if D6 has $1 that means that the test failed and now print INVALID EA    
00001E9A                          1430  
00001E9A  6700 0AF0               1431              BEQ     INVAL_EA_NO_RTS     
00001E9E                          1432              
00001E9E                          1433              
00001E9E                          1434              * TEST PRINT DEST MODE AND REGISTER
00001E9E  3E12                    1435              MOVE.W  (A2),D7
00001EA0  48E7 0120               1436              MOVEM.L A2/D7,-(SP)
00001EA4  4EB9 00001FF2           1437              JSR     T_SUBTR_PRINT_DEST_EA
00001EAA  4CDF 0480               1438              MOVEM.L (SP)+,A2/D7
00001EAE                          1439              
00001EAE  BC3C 0001               1440              CMP.B   #$1,D6              *if D6 has $1 that means that the test failed and now print INVALID EA    
00001EB2                          1441  
00001EB2  6700 0AD8               1442              BEQ     INVAL_EA_NO_RTS
00001EB6                          1443              
00001EB6                          1444  
00001EB6                          1445              *GET SOURCE SUB
00001EB6  3E12                    1446              MOVE.W  (A2),D7
00001EB8  48E7 0120               1447              MOVEM.L A2/D7,-(SP)
00001EBC  4EB9 000021A0           1448              JSR     SUBTR_PRINT_SRC_EA
00001EC2  4CDF 0480               1449              MOVEM.L (SP)+,A2/D7
00001EC6                          1450              
00001EC6                          1451               * PRINT COMMA
00001EC6  43F9 00002AB0           1452              LEA     MSG_COMMA,A1
00001ECC  103C 000E               1453              MOVE.B  #14,D0
00001ED0  4E4F                    1454              TRAP    #15
00001ED2                          1455              
00001ED2                          1456              * PRINT DEST MODE AND REGISTER
00001ED2  3E12                    1457              MOVE.W  (A2),D7
00001ED4  48E7 0120               1458              MOVEM.L A2/D7,-(SP)
00001ED8  4EB9 000021D8           1459              JSR     SUBTR_PRINT_DEST_EA
00001EDE  4CDF 0480               1460              MOVEM.L (SP)+,A2/D7
00001EE2                          1461  
00001EE2                          1462              
00001EE2  244C                    1463              MOVEA.L A4,A2           *move A3 to A2 since absolute address may have been used
00001EE4  548A                    1464              ADDA.L  #$2,A2          * Increase counter by long
00001EE6  4287                    1465              CLR.L   D7
00001EE8  43F9 00002B12           1466              LEA     BLANK,A1        * PRINT BLANK LINE to prepare for next line
00001EEE  103C 000E               1467              MOVE.B  #14,D0
00001EF2  4E4F                    1468              TRAP    #15
00001EF4                          1469  
00001EF4  6000 F2F6               1470              BRA     MAIN_LOOP       * Branch back up to main loop
00001EF8                          1471  
00001EF8                          1472  SUBT_SIZE_SUB   *print the size of subtract
00001EF8  3E12                    1473              MOVE.W  (A2),D7
00001EFA  EF4F                    1474              LSL.W   #7,D7   *get rid of first 6 bits of sub opcode
00001EFC  363C 000D               1475              MOVE.W  #13,D3
00001F00  E66F                    1476              LSR.W   D3,D7   *shift D7 to right 13 to get the opmode
00001F02  BE3C 0000               1477              CMP.B   #$0,D7
00001F06  6700 05E2               1478              BEQ     BYTE
00001F0A  BE3C 0001               1479              CMP.B   #$1,D7
00001F0E  6700 05EA               1480              BEQ     WORD
00001F12  BE3C 0002               1481              CMP.B   #$2,D7
00001F16  6700 05F2               1482              BEQ     LONG
00001F1A  BE3C 0004               1483              CMP.B   #$4,D7
00001F1E  6700 05CA               1484              BEQ     BYTE
00001F22  BE3C 0005               1485              CMP.B   #$5,D7
00001F26  6700 05D2               1486              BEQ     WORD
00001F2A  BE3C 0006               1487              CMP.B   #$6,D7
00001F2E  6700 05DA               1488              BEQ     LONG
00001F32  6000 05E6               1489              BRA     EXIT
00001F36                          1490              *ELSE BRANCH TO INVALID EA
00001F36                          1491  
00001F36                          1492  T_SOURCE_SUBTR_EA  
00001F36  3E12                    1493              MOVE.W  (A2),D7
00001F38  760A                    1494              MOVE.L  #10,D3
00001F3A  E76F                    1495              LSL.W   D3,D7   *shift D7 to right 13 to get the register
00001F3C  760D                    1496              MOVE.L  #13,D3
00001F3E  E66F                    1497              LSR.W   D3,D7   *shift D7 to right 13 to get the register
00001F40                          1498  
00001F40  BE3C 0000               1499              CMP.B   #$0,D7          *mode is Dn
00001F44  6700 06AE               1500              BEQ     GOOD
00001F48  BE3C 0001               1501              CMP.B   #$1,D7          
00001F4C  6700 0140               1502              BEQ     T_SUBTR_ADDY_R_SNP
00001F50  BE3C 0002               1503              CMP.B   #$2,D7             *mode is (An)
00001F54  6700 069E               1504              BEQ     GOOD       *(An) 
00001F58  BE3C 0003               1505              CMP.B   #$3,D7
00001F5C  6700 0696               1506              BEQ     GOOD      *(An)+
00001F60  BE3C 0004               1507              CMP.B   #$4,D7
00001F64  6700 068E               1508              BEQ     GOOD      *-(An)
00001F68  BE3C 0007               1509              CMP.B   #$7,D7
00001F6C  6700 00C0               1510              BEQ     T_SUBTR_IMM_REG_S      *(xxx).W or (xxx).L or #<data>
00001F70  6000 0A12               1511              BRA     INVALID_EA
00001F74                          1512  
00001F74                          1513  T_DEST_SUBTR_EA  
00001F74  4287                    1514              CLR.L   D7
00001F76  3E12                    1515              MOVE.W  (A2),D7
00001F78  760A                    1516              MOVE.L  #10,D3
00001F7A  E76F                    1517              LSL.W   D3,D7   *shift D7 to right 10 to get the mode
00001F7C  760D                    1518              MOVE.L  #13,D3
00001F7E  E66F                    1519              LSR.W   D3,D7   *shift D7 to right 13 to get the mode
00001F80                          1520  
00001F80  BE3C 0000               1521              CMP.B   #$0,D7          *mode is Dn
00001F84  6700 066E               1522              BEQ     GOOD 
00001F88  BE3C 0001               1523              CMP.B   #$1,D7          
00001F8C  6700 0100               1524              BEQ     T_SUBTR_ADDY_R_SNP
00001F90  BE3C 0002               1525              CMP.B   #$2,D7             *mode is (An)
00001F94  6700 065E               1526              BEQ     GOOD      *(An) 
00001F98  BE3C 0003               1527              CMP.B   #$3,D7
00001F9C  6700 0656               1528              BEQ     GOOD      *(An)+
00001FA0  BE3C 0004               1529              CMP.B   #$4,D7
00001FA4  6700 064E               1530              BEQ     GOOD      *-(An)
00001FA8  BE3C 0007               1531              CMP.B   #$7,D7
00001FAC  6700 010C               1532              BEQ     T_SUBTR_IMM_REG_D      *(xxx).W or (xxx).L
00001FB0  6000 09D2               1533              BRA     INVALID_EA
00001FB4                          1534              
00001FB4                          1535  T_SUBTR_PRINT_SRC_EA
00001FB4  4287                    1536              CLR.L   D7
00001FB6  3E12                    1537              MOVE.W  (A2),D7
00001FB8  EF4F                    1538              LSL.W   #7,D7   *get rid of first 6 bits of sub opcode
00001FBA  760D                    1539              MOVE.L  #13,D3
00001FBC  E66F                    1540              LSR.W   D3,D7   *shift D7 to right 13 to get the opmode
00001FBE                          1541              
00001FBE  BE3C 0000               1542              CMP.B   #$0,D7
00001FC2  6700 FF72               1543              BEQ     T_SOURCE_SUBTR_EA  *DEST ea is DN
00001FC6  BE3C 0001               1544              CMP.B   #$1,D7
00001FCA  6700 FF6A               1545              BEQ     T_SOURCE_SUBTR_EA  *DEST ea is DN
00001FCE  BE3C 0002               1546              CMP.B   #$2,D7
00001FD2  6700 FF62               1547              BEQ     T_SOURCE_SUBTR_EA  *DEST ea is DN
00001FD6  BE3C 0004               1548              CMP.B   #$4,D7
00001FDA  6700 0618               1549              BEQ     GOOD   *SOURCE ea is DN
00001FDE  BE3C 0005               1550              CMP.B   #$5,D7
00001FE2  6700 0610               1551              BEQ     GOOD   *SOURCE ea is DN
00001FE6  BE3C 0006               1552              CMP.B   #$6,D7
00001FEA  6700 0608               1553              BEQ     GOOD  *SOURCE ea is DN
00001FEE  6000 0994               1554              BRA     INVALID_EA
00001FF2                          1555              
00001FF2                          1556              
00001FF2                          1557  
00001FF2                          1558  T_SUBTR_PRINT_DEST_EA
00001FF2  3E12                    1559              MOVE.W  (A2),D7
00001FF4  EF4F                    1560              LSL.W   #7,D7   *get rid of first 6 bits of sub opcode
00001FF6  760D                    1561              MOVE.L  #13,D3
00001FF8  E66F                    1562              LSR.W   D3,D7   *shift D7 to right 13 to get the opmode
00001FFA                          1563              
00001FFA  BE3C 0000               1564              CMP.B   #$0,D7
00001FFE  6700 05F4               1565              BEQ     GOOD  *DEST ea is DN
00002002  BE3C 0001               1566              CMP.B   #$1,D7
00002006  6700 05EC               1567              BEQ     GOOD  *DEST ea is DN
0000200A  BE3C 0002               1568              CMP.B   #$2,D7
0000200E  6700 05E4               1569              BEQ     GOOD  *DEST ea is DN
00002012  BE3C 0004               1570              CMP.B   #$4,D7
00002016  6700 FF5C               1571              BEQ     T_DEST_SUBTR_EA   *source ea is DN
0000201A  BE3C 0005               1572              CMP.B   #$5,D7
0000201E  6700 FF54               1573              BEQ     T_DEST_SUBTR_EA   *source ea is DN
00002022  BE3C 0006               1574              CMP.B   #$6,D7
00002026  6700 FF4C               1575              BEQ     T_DEST_SUBTR_EA   *source ea is DN
0000202A  6000 0958               1576              BRA     INVALID_EA
0000202E                          1577  
0000202E                          1578  T_SUBTR_IMM_REG_S *EA is source for subtract opcode
0000202E  3E12                    1579              MOVE.W  (A2),D7
00002030  760D                    1580              MOVE.L  #13,D3
00002032  E76F                    1581              LSL.W   D3,D7   *shift D7 to right 13 to get the register
00002034  E66F                    1582              LSR.W   D3,D7   *shift D7 to right 13 to get the register
00002036                          1583              
00002036  BE3C 0000               1584              CMP.B   #$0,D7
0000203A  6700 05B8               1585              BEQ     GOOD  *word absolute address
0000203E  BE3C 0001               1586              CMP.B   #$1,D7
00002042  6700 05B0               1587              BEQ     GOOD  *long absolute address
00002046  BE3C 0004               1588              CMP.B   #$4,D7
0000204A  6700 0006               1589              BEQ     T_SUBTR_IMM_DATA_S 
0000204E                          1590              
0000204E  6000 0934               1591              BRA     INVALID_EA
00002052                          1592              
00002052                          1593  T_SUBTR_IMM_DATA_S
00002052                          1594              
00002052  3E14                    1595              MOVE.W  (A4),D7
00002054  EF4F                    1596              LSL.W   #7,D7
00002056  760D                    1597              MOVE.L  #13,D3
00002058                          1598              
00002058  E66F                    1599              LSR.W   D3,D7       * SHIFT TO SIZE FIELD
0000205A  BE3C 0000               1600              CMP.B   #$0,D7
0000205E  6700 0594               1601              BEQ     GOOD
00002062  BE3C 0001               1602              CMP.B   #$1,D7
00002066  6700 058C               1603              BEQ     GOOD
0000206A  BE3C 0002               1604              CMP.B   #$2,D7
0000206E  6700 0584               1605              BEQ     GOOD
00002072  BE3C 0004               1606              CMP.B   #$4,D7
00002076  6700 057C               1607              BEQ     GOOD
0000207A  BE3C 0005               1608              CMP.B   #$5,D7
0000207E  6700 0574               1609              BEQ     GOOD
00002082  BE3C 0006               1610              CMP.B   #$6,D7
00002086  6700 056C               1611              BEQ     GOOD
0000208A                          1612              *if neither then it is an error
0000208A  6000 08F8               1613              BRA     INVALID_EA
0000208E                          1614  
0000208E                          1615  T_SUBTR_ADDY_R_SNP    *An but cannot be byte for opcode size of subtr
0000208E  3E14                    1616              MOVE.W  (A4),D7
00002090  EF4F                    1617              LSL.W   #7,D7
00002092                          1618              
00002092  760D                    1619              MOVE.L  #13,D3
00002094  E66F                    1620              LSR.W   D3,D7
00002096  BE3C 0001               1621              CMP.B   #$1,D7
0000209A  6700 0558               1622              BEQ     GOOD 
0000209E  BE3C 0002               1623              CMP.B   #$2,D7
000020A2  6700 0550               1624              BEQ     GOOD
000020A6  BE3C 0005               1625              CMP.B   #$5,D7
000020AA  6700 0548               1626              BEQ     GOOD
000020AE  BE3C 0006               1627              CMP.B   #$6,D7
000020B2  6700 0540               1628              BEQ     GOOD
000020B6                          1629              *INVALID EA
000020B6  6000 08CC               1630              BRA     INVALID_EA
000020BA                          1631  
000020BA                          1632              
000020BA                          1633  T_SUBTR_IMM_REG_D *EA is destination for subtract opcode
000020BA  3E12                    1634              MOVE.W  (A2),D7
000020BC  760D                    1635              MOVE.L  #13,D3
000020BE  E76F                    1636              LSL.W   D3,D7   *shift D7 to left 13 to get the register
000020C0  E66F                    1637              LSR.W   D3,D7   *shift D7 to right 13 to get the register
000020C2                          1638              
000020C2  BE3C 0000               1639              CMP.B   #$0,D7
000020C6  6700 052C               1640              BEQ     GOOD  *word absolute address
000020CA  BE3C 0001               1641              CMP.B   #$1,D7
000020CE  6700 0524               1642              BEQ     GOOD  *long absolute address
000020D2  6000 08B0               1643              BRA     INVALID_EA
000020D6                          1644  
000020D6                          1645  
000020D6                          1646  SOURCE_SUBTR_EA  
000020D6  3E12                    1647              MOVE.W  (A2),D7
000020D8  760A                    1648              MOVE.L  #10,D3
000020DA  E76F                    1649              LSL.W   D3,D7   *shift D7 to right 13 to get the register
000020DC  760D                    1650              MOVE.L  #13,D3
000020DE  E66F                    1651              LSR.W   D3,D7   *shift D7 to right 13 to get the register
000020E0                          1652  
000020E0  BE3C 0000               1653              CMP.B   #$0,D7          *mode is Dn
000020E4  6700 0094               1654              BEQ     F_SUBTR_DN_SRC 
000020E8  BE3C 0001               1655              CMP.B   #$1,D7          mode is An NOT ALLOWED
000020EC  6700 0188               1656              BEQ     SUBTR_ADDY_R_SNP
000020F0  BE3C 0002               1657              CMP.B   #$2,D7             *mode is (An)
000020F4  6700 06A6               1658              BEQ     ADDY_R_SP       *(An) 
000020F8  BE3C 0003               1659              CMP.B   #$3,D7
000020FC  6700 0718               1660              BEQ     ADDY_R_SPI      *(An)+
00002100  BE3C 0004               1661              CMP.B   #$4,D7
00002104  6700 07A2               1662              BEQ     ADDY_R_SPD      *-(An)
00002108  BE3C 0007               1663              CMP.B   #$7,D7
0000210C  6700 0106               1664              BEQ     SUBTR_IMM_REG_S      *(xxx).W or (xxx).L or #<data>
00002110  6000 0872               1665              BRA     INVALID_EA
00002114                          1666  
00002114                          1667  DEST_SUBTR_EA  
00002114  4287                    1668              CLR.L   D7
00002116  3E12                    1669              MOVE.W  (A2),D7
00002118  760A                    1670              MOVE.L  #10,D3
0000211A  E76F                    1671              LSL.W   D3,D7   *shift D7 to right 10 to get the mode
0000211C  760D                    1672              MOVE.L  #13,D3
0000211E  E66F                    1673              LSR.W   D3,D7   *shift D7 to right 13 to get the mode
00002120                          1674  
00002120  BE3C 0000               1675              CMP.B   #$0,D7          *mode is Dn
00002124  6700 002E               1676              BEQ     F_SUBTR_DN 
00002128  BE3C 0001               1677              CMP.B   #$1,D7          
0000212C  6700 0148               1678              BEQ     SUBTR_ADDY_R_SNP
00002130  BE3C 0002               1679              CMP.B   #$2,D7             *mode is (An)
00002134  6700 0666               1680              BEQ     ADDY_R_SP       *(An) 
00002138  BE3C 0003               1681              CMP.B   #$3,D7
0000213C  6700 06D8               1682              BEQ     ADDY_R_SPI      *(An)+
00002140  BE3C 0004               1683              CMP.B   #$4,D7
00002144  6700 0762               1684              BEQ     ADDY_R_SPD      *-(An)
00002148  BE3C 0007               1685              CMP.B   #$7,D7
0000214C  6700 0154               1686              BEQ     SUBTR_IMM_REG_D      *(xxx).W or (xxx).L
00002150  6000 0832               1687              BRA     INVALID_EA
00002154                          1688  
00002154                          1689  F_SUBTR_DN
00002154  4287                    1690              CLR.L   D7
00002156  3E12                    1691              MOVE.W  (A2),D7
00002158  E94F                    1692              LSL.W   #4,D7   *get rid of first 6 bits of sub opcode
0000215A  760D                    1693              MOVE.L  #13,D3
0000215C  E66F                    1694              LSR.W   D3,D7   *shift D7 to right 13 to get the register
0000215E  43F9 00002B0A           1695              LEA     MSG_D,A1
00002164  103C 000E               1696              MOVE.B  #14,D0
00002168  4E4F                    1697              TRAP    #15
0000216A  4281                    1698              CLR.L   D1
0000216C  7410                    1699              MOVE.L  #16,D2
0000216E  3207                    1700              MOVE.W  D7,D1
00002170  103C 000F               1701              MOVE.B  #15,D0
00002174  4E4F                    1702              TRAP    #15
00002176  6000 03A2               1703              BRA EXIT      
0000217A                          1704  
0000217A                          1705  F_SUBTR_DN_SRC
0000217A  4287                    1706              CLR.L   D7
0000217C  3E12                    1707              MOVE.W  (A2),D7
0000217E  760D                    1708              MOVE.L  #13,D3
00002180  E76F                    1709              LSL.W   D3,D7   *get rid of first 6 bits of sub opcode
00002182  E66F                    1710              LSR.W   D3,D7   *shift D7 to right 13 to get the register
00002184  43F9 00002B0A           1711              LEA     MSG_D,A1
0000218A  103C 000E               1712              MOVE.B  #14,D0
0000218E  4E4F                    1713              TRAP    #15
00002190  4281                    1714              CLR.L   D1
00002192  7410                    1715              MOVE.L  #16,D2
00002194  3207                    1716              MOVE.W  D7,D1
00002196  103C 000F               1717              MOVE.B  #15,D0
0000219A  4E4F                    1718              TRAP    #15
0000219C  6000 037C               1719              BRA EXIT              
000021A0                          1720              
000021A0                          1721  SUBTR_PRINT_SRC_EA
000021A0  4287                    1722              CLR.L   D7
000021A2  3E12                    1723              MOVE.W  (A2),D7
000021A4  EF4F                    1724              LSL.W   #7,D7   *get rid of first 6 bits of sub opcode
000021A6  760D                    1725              MOVE.L  #13,D3
000021A8  E66F                    1726              LSR.W   D3,D7   *shift D7 to right 13 to get the opmode
000021AA                          1727              
000021AA  BE3C 0000               1728              CMP.B   #$0,D7
000021AE  6700 FF26               1729              BEQ     SOURCE_SUBTR_EA  *DEST ea is DN
000021B2  BE3C 0001               1730              CMP.B   #$1,D7
000021B6  6700 FF1E               1731              BEQ     SOURCE_SUBTR_EA  *DEST ea is DN
000021BA  BE3C 0002               1732              CMP.B   #$2,D7
000021BE  6700 FF16               1733              BEQ     SOURCE_SUBTR_EA  *DEST ea is DN
000021C2  BE3C 0004               1734              CMP.B   #$4,D7
000021C6  678C                    1735              BEQ     F_SUBTR_DN   *SOURCE ea is DN
000021C8  BE3C 0005               1736              CMP.B   #$5,D7
000021CC  6786                    1737              BEQ     F_SUBTR_DN   *SOURCE ea is DN
000021CE  BE3C 0006               1738              CMP.B   #$6,D7
000021D2  6780                    1739              BEQ     F_SUBTR_DN   *SOURCE ea is DN
000021D4  6000 07AE               1740              BRA     INVALID_EA
000021D8                          1741  
000021D8                          1742  SUBTR_PRINT_DEST_EA
000021D8  3E12                    1743              MOVE.W  (A2),D7
000021DA  EF4F                    1744              LSL.W   #7,D7   *get rid of first 6 bits of sub opcode
000021DC  760D                    1745              MOVE.L  #13,D3
000021DE  E66F                    1746              LSR.W   D3,D7   *shift D7 to right 13 to get the opmode
000021E0                          1747              
000021E0  BE3C 0000               1748              CMP.B   #$0,D7
000021E4  6700 FF6E               1749              BEQ     F_SUBTR_DN  *DEST ea is DN
000021E8  BE3C 0001               1750              CMP.B   #$1,D7
000021EC  6700 FF66               1751              BEQ     F_SUBTR_DN  *DEST ea is DN
000021F0  BE3C 0002               1752              CMP.B   #$2,D7
000021F4  6700 FF5E               1753              BEQ     F_SUBTR_DN  *DEST ea is DN
000021F8  BE3C 0004               1754              CMP.B   #$4,D7
000021FC  6700 FF16               1755              BEQ     DEST_SUBTR_EA   *source ea is DN
00002200  BE3C 0005               1756              CMP.B   #$5,D7
00002204  6700 FF0E               1757              BEQ     DEST_SUBTR_EA   *source ea is DN
00002208  BE3C 0006               1758              CMP.B   #$6,D7
0000220C  6700 FF06               1759              BEQ     DEST_SUBTR_EA   *source ea is DN
00002210  6000 0772               1760              BRA     INVALID_EA
00002214                          1761              
00002214                          1762  
00002214                          1763  SUBTR_IMM_REG_S *EA is source for subtract opcode
00002214  3E12                    1764              MOVE.W  (A2),D7
00002216  760D                    1765              MOVE.L  #13,D3
00002218  E76F                    1766              LSL.W   D3,D7   *shift D7 to right 13 to get the register
0000221A  E66F                    1767              LSR.W   D3,D7   *shift D7 to right 13 to get the register
0000221C                          1768              
0000221C  BE3C 0000               1769              CMP.B   #$0,D7
00002220  6700 0462               1770              BEQ     W_ADDY  *word absolute address
00002224  BE3C 0001               1771              CMP.B   #$1,D7
00002228  6700 047A               1772              BEQ     L_ADDY  *long absolute address
0000222C  BE3C 0004               1773              CMP.B   #$4,D7
00002230  6700 0006               1774              BEQ     SUBTR_IMM_DATA_S 
00002234                          1775              
00002234  6000 074E               1776              BRA     INVALID_EA
00002238                          1777              
00002238                          1778  SUBTR_IMM_DATA_S
00002238                          1779              
00002238  3E14                    1780              MOVE.W  (A4),D7
0000223A  EF4F                    1781              LSL.W   #7,D7
0000223C  760D                    1782              MOVE.L  #13,D3
0000223E                          1783              
0000223E  548C                    1784              ADDA.L  #$2,A4      *increment A4 by a word 
00002240  E66F                    1785              LSR.W   D3,D7       * SHIFT TO SIZE FIELD
00002242  BE3C 0000               1786              CMP.B   #$0,D7
00002246  6700 04C8               1787              BEQ     IMM_DATA_SW
0000224A  BE3C 0001               1788              CMP.B   #$1,D7
0000224E  6700 04C0               1789              BEQ     IMM_DATA_SW
00002252  BE3C 0002               1790              CMP.B   #$2,D7
00002256  6700 0492               1791              BEQ     IMM_DATA_SL
0000225A  BE3C 0004               1792              CMP.B   #$4,D7
0000225E  6700 04B0               1793              BEQ     IMM_DATA_SW
00002262  BE3C 0005               1794              CMP.B   #$5,D7
00002266  6700 04A8               1795              BEQ     IMM_DATA_SW
0000226A  BE3C 0006               1796              CMP.B   #$6,D7
0000226E  6700 047A               1797              BEQ     IMM_DATA_SL
00002272                          1798              *if neither then it is an error
00002272  6000 0710               1799              BRA     INVALID_EA
00002276                          1800  
00002276                          1801  SUBTR_ADDY_R_SNP    *An but cannot be byte for opcode size of subtr
00002276  3E14                    1802              MOVE.W  (A4),D7
00002278  EF4F                    1803              LSL.W   #7,D7
0000227A                          1804              
0000227A  760D                    1805              MOVE.L  #13,D3
0000227C  E66F                    1806              LSR.W   D3,D7
0000227E  BE3C 0001               1807              CMP.B   #$1,D7
00002282  6700 04D0               1808              BEQ     ADDY_R_SNP 
00002286  BE3C 0002               1809              CMP.B   #$2,D7
0000228A  6700 04C8               1810              BEQ     ADDY_R_SNP
0000228E  BE3C 0005               1811              CMP.B   #$5,D7
00002292  6700 04C0               1812              BEQ     ADDY_R_SNP 
00002296  BE3C 0006               1813              CMP.B   #$6,D7
0000229A  6700 04B8               1814              BEQ     ADDY_R_SNP
0000229E                          1815              *INVALID EA
0000229E  6000 06E4               1816              BRA     INVALID_EA
000022A2                          1817  
000022A2                          1818              
000022A2                          1819  SUBTR_IMM_REG_D *EA is destination for subtract opcode
000022A2  3E12                    1820              MOVE.W  (A2),D7
000022A4  760D                    1821              MOVE.L  #13,D3
000022A6  E76F                    1822              LSL.W   D3,D7   *shift D7 to left 13 to get the register
000022A8  E66F                    1823              LSR.W   D3,D7   *shift D7 to right 13 to get the register
000022AA                          1824              
000022AA  BE3C 0000               1825              CMP.B   #$0,D7
000022AE  6700 03D4               1826              BEQ     W_ADDY  *word absolute address
000022B2  BE3C 0001               1827              CMP.B   #$1,D7
000022B6  6700 03EC               1828              BEQ     L_ADDY  *long absolute address
000022BA  6000 06C8               1829              BRA     INVALID_EA
000022BE                          1830             
000022BE                          1831  
000022BE                          1832  MATCH_MOVE
000022BE  3E12                    1833              MOVE.W  (A2),D7
000022C0  EC0F                    1834              LSR.B   #6,D7       *shift value in D7 to the right by 6 bits
000022C2  0C07 0001               1835              CMPI.B  #$1,D7     *check if opcode is $1 if so it is MOVEA
000022C6  6700 00AA               1836              BEQ     MATCH_MOVEA
000022CA                          1837              
000022CA                          1838              
000022CA                          1839              
000022CA  3E12                    1840              MOVE.W  (A2),D7
000022CC  363C 000C               1841              MOVE.W #12,D3
000022D0                          1842              
000022D0  E66F                    1843              LSR.W   D3,D7
000022D2  BE3C 0000               1844              CMP.B   #$00,D7
000022D6  6700 EF90               1845              BEQ     NOOP
000022DA                          1846              
000022DA  220A                    1847              MOVE.L  A2,D1
000022DC  143C 0010               1848              MOVE.B  #16,D2
000022E0  103C 000F               1849              MOVE.B  #15,D0
000022E4  4E4F                    1850              TRAP    #15
000022E6  43F9 00002A9C           1851              LEA     MSG_MOVE,A1
000022EC  103C 000E               1852              MOVE.B  #14,D0
000022F0  4E4F                    1853              TRAP    #15
000022F2                          1854              
000022F2                          1855              * PRINT SIZE
000022F2  3E12                    1856              MOVE.W  (A2),D7
000022F4  48A7 0120               1857              MOVEM.W A2/D7,-(SP)
000022F8  4EB8 1D18               1858              JSR     MOVE_SIZE_SUB
000022FC  4C9F 0480               1859              MOVEM.W (SP)+,A2/D7
00002300                          1860              
00002300  4286                    1861              CLR.L   D6
00002302                          1862              *TEST MOVE SRC
00002302  3E12                    1863              MOVE.W  (A2),D7
00002304  48A7 0120               1864              MOVEM.W A2/D7,-(SP)
00002308  4EB9 0000251C           1865              JSR     T_PRINT_SRC_EA
0000230E  4C9F 0480               1866              MOVEM.W (SP)+,A2/D7
00002312                          1867              
00002312  BC3C 0001               1868              CMP.B   #$1,D6
00002316  6700 0674               1869              BEQ     INVAL_EA_NO_RTS
0000231A                          1870              
0000231A                          1871              *TEST MOVE DEST
0000231A  3E12                    1872              MOVE.W  (A2),D7
0000231C  48A7 0120               1873              MOVEM.W A2/D7,-(SP)
00002320  4EB9 00002554           1874              JSR     T_MOVE_MODE_DEST
00002326  4C9F 0480               1875              MOVEM.W (SP)+,A2/D7
0000232A                          1876              
0000232A  BC3C 0001               1877              CMP.B   #$1,D6
0000232E  6700 065C               1878              BEQ     INVAL_EA_NO_RTS
00002332                          1879              
00002332                          1880              
00002332                          1881              * PRINT SRC MODE AND REGISTER
00002332  3E12                    1882              MOVE.W  (A2),D7
00002334  48A7 0120               1883              MOVEM.W A2/D7,-(SP)
00002338  4EB9 000025F6           1884              JSR     PRINT_SRC_EA
0000233E  4C9F 0480               1885              MOVEM.W (SP)+,A2/D7
00002342                          1886              
00002342                          1887              * PRINT COMMA
00002342  43F9 00002AB0           1888              LEA     MSG_COMMA,A1
00002348  103C 000E               1889              MOVE.B  #14,D0
0000234C  4E4F                    1890              TRAP    #15
0000234E                          1891              
0000234E                          1892              * PRINT DEST MODE AND REGISTER
0000234E  3E12                    1893              MOVE.W  (A2),D7
00002350  48A7 0120               1894              MOVEM.W A2/D7,-(SP)
00002354  4EB9 0000262E           1895              JSR     MOVE_MODE_DEST
0000235A  4C9F 0480               1896              MOVEM.W (SP)+,A2/D7
0000235E                          1897                 
0000235E  344C                    1898              MOVEA.W A4,A2           *move A3 to A2 since absolute address may have been used
00002360  548A                    1899              ADDA.L  #$2,A2          * Increase counter by long
00002362                          1900              
00002362  43F9 00002B12           1901              LEA     BLANK,A1        * PRINT BLANK LINE to prepare for next line
00002368  103C 000E               1902              MOVE.B  #14,D0
0000236C  4E4F                    1903              TRAP    #15
0000236E                          1904  
0000236E  6000 EE7C               1905              BRA     MAIN_LOOP       * Branch back up to main loop
00002372                          1906  
00002372                          1907              
00002372                          1908  MATCH_MOVEA
00002372                          1909              
00002372  3E12                    1910              MOVE.W  (A2),D7
00002374  363C 000C               1911              MOVE.W #12,D3
00002378                          1912              
00002378  E66F                    1913              LSR.W   D3,D7
0000237A  BE3C 0000               1914              CMP.B   #$00,D7
0000237E  6700 EEE8               1915              BEQ     NOOP
00002382  BE3C 0001               1916              CMP.B   #$1,D7
00002386  6700 EEE0               1917              BEQ     NOOP
0000238A                          1918  
0000238A  220A                    1919              MOVE.L  A2,D1
0000238C  143C 0010               1920              MOVE.B  #16,D2
00002390  103C 000F               1921              MOVE.B  #15,D0
00002394  4E4F                    1922              TRAP    #15
00002396                          1923              
00002396  43F9 00002AB2           1924              LEA     MSG_MOVEA,A1
0000239C  103C 000E               1925              MOVE.B  #14,D0
000023A0  4E4F                    1926              TRAP    #15
000023A2                          1927              
000023A2                          1928              * PRINT SIZE
000023A2  3E12                    1929              MOVE.W  (A2),D7
000023A4  48A7 0120               1930              MOVEM.W A2/D7,-(SP)
000023A8  4EB8 1D38               1931              JSR     MOVEA_SIZE_SUB
000023AC  4C9F 0480               1932              MOVEM.W (SP)+,A2/D7
000023B0                          1933              
000023B0                          1934              *TEST EA
000023B0  3E12                    1935              MOVE.W  (A2),D7
000023B2  48A7 0120               1936              MOVEM.W A2/D7,-(SP)
000023B6  4EB8 1C16               1937              JSR     T_ADDA_PRINT_SRC_EA    *test ea 
000023BA  4C9F 0480               1938              MOVEM.W (SP)+,A2/D7
000023BE                          1939              
000023BE                          1940  
000023BE  BC3C 0001               1941              CMP.B   #$1,D6
000023C2  6700 05C8               1942              BEQ     INVAL_EA_NO_RTS
000023C6                          1943              
000023C6  3E12                    1944              MOVE.W  (A2),D7
000023C8  48A7 0120               1945              MOVEM.W A2/D7,-(SP)
000023CC  4EB8 1B96               1946              JSR     ADDA_P_SRC_EA    *print ea 
000023D0  4C9F 0480               1947              MOVEM.W (SP)+,A2/D7
000023D4                          1948              
000023D4                          1949              * PRINT COMMA
000023D4  43F9 00002AB0           1950              LEA     MSG_COMMA,A1
000023DA  103C 000E               1951              MOVE.B  #14,D0
000023DE  4E4F                    1952              TRAP    #15
000023E0                          1953                  
000023E0  4287                    1954              CLR.L   D7
000023E2  3E12                    1955              MOVE.W  (A2),D7
000023E4                          1956              
000023E4                          1957              * PRINT ADDRESS REGISTER
000023E4  760D                    1958              MOVE.L  #13,D3
000023E6  E94F                    1959              LSL.W   #4,D7
000023E8  E66F                    1960              LSR.W   D3,D7   *get register bits 
000023EA                          1961              
000023EA  43F9 00002B0C           1962              LEA     MSG_A,A1    *print An
000023F0  103C 000E               1963              MOVE.B  #14,D0
000023F4  4E4F                    1964              TRAP    #15
000023F6                          1965   
000023F6  7410                    1966              MOVE.L  #16,D2
000023F8  2207                    1967              MOVE.L  D7,D1       *print register number of An
000023FA  103C 000F               1968              MOVE.B  #15,D0
000023FE  4E4F                    1969              TRAP    #15
00002400                          1970  
00002400                          1971              
00002400                          1972              
00002400                          1973              
00002400  344C                    1974              MOVEA.W A4,A2           *move A3 to A2 since absolute address may have been used
00002402  548A                    1975              ADDA.L  #$2,A2          * Increase counter by long
00002404                          1976              
00002404  43F9 00002B12           1977              LEA     BLANK,A1        * PRINT BLANK LINE to prepare for next line
0000240A  103C 000E               1978              MOVE.B  #14,D0
0000240E  4E4F                    1979              TRAP    #15
00002410                          1980  
00002410  6000 EDDA               1981              BRA     MAIN_LOOP       * Branch back up to main loop
00002414                          1982  
00002414                          1983  MATCH_MOVEQ
00002414  3E12                    1984              MOVE.W  (A2),D7
00002416  760F                    1985              MOVE.L #15,D3
00002418  EF4F                    1986              LSL.W   #7,D7
0000241A  E66F                    1987              LSR.W   D3,D7
0000241C                          1988              
0000241C  BE3C 0000               1989              CMP.B   #$00,D7
00002420  6600 EE46               1990              BNE     NOOP
00002424                          1991              *print moveq
00002424  220A                    1992              MOVE.L  A2,D1
00002426  143C 0010               1993              MOVE.B  #16,D2
0000242A  103C 000F               1994              MOVE.B  #15,D0
0000242E  4E4F                    1995              TRAP    #15
00002430                          1996              
00002430  43F9 00002A92           1997              LEA     MSG_MOVEQ,A1
00002436  103C 000E               1998              MOVE.B  #14,D0
0000243A                          1999              
0000243A  4E4F                    2000              TRAP    #15
0000243C                          2001              *print data of moveq
0000243C  43F9 00002B1C           2002              LEA     IMDATA,A1
00002442  103C 000E               2003              MOVE.B  #14,D0
00002446  4E4F                    2004              TRAP    #15
00002448                          2005              
00002448  43F9 00002B1A           2006              LEA     DOLLAR,A1
0000244E  4E4F                    2007              TRAP    #15
00002450                          2008              
00002450  3E12                    2009              MOVE.W  (A2),D7
00002452  E14F                    2010              LSL.W   #8,D7
00002454  E04F                    2011              LSR.W   #8,D7
00002456  2207                    2012              MOVE.L  D7,D1
00002458                          2013              
00002458  7410                    2014              MOVE.L  #16,D2
0000245A  103C 000F               2015              MOVE.B  #15,D0
0000245E  4E4F                    2016              TRAP    #15
00002460                          2017  
00002460  43F9 00002AB0           2018              LEA     MSG_COMMA,A1
00002466  103C 000E               2019              MOVE.B  #14,D0
0000246A  4E4F                    2020              TRAP    #15
0000246C                          2021              
0000246C                          2022              *print Dn
0000246C  E94F                    2023              LSL.W   #4,D7
0000246E  760D                    2024              MOVE.L  #13,D3
00002470  E66F                    2025              LSR.W   D3,D7
00002472  2207                    2026              MOVE.L  D7,D1
00002474                          2027      
00002474  3E12                    2028              MOVE.W  (A2),D7
00002476  48A7 0120               2029              MOVEM.W A2/D7,-(SP)
0000247A  4EB9 0000295E           2030              JSR     DATA_R_D    *print Dn
00002480  4C9F 0480               2031              MOVEM.W (SP)+,A2/D7
00002484                          2032              
00002484  344C                    2033              MOVEA.W A4,A2           *move A3 to A2 since absolute address may have been used
00002486  548A                    2034              ADDA.L  #$2,A2          * Increase counter by long
00002488                          2035              
00002488  43F9 00002B12           2036              LEA     BLANK,A1        * PRINT BLANK LINE to prepare for next line
0000248E  103C 000E               2037              MOVE.B  #14,D0
00002492  4E4F                    2038              TRAP    #15
00002494                          2039  
00002494  6000 ED56               2040              BRA     MAIN_LOOP       * Branch back up to main loop
00002498                          2041              
00002498                          2042  MATCH_MOVEM 
00002498  3E12                    2043              MOVE.W  (A2),D7
0000249A  363C 000C               2044              MOVE.W #12,D3
0000249E                          2045              
0000249E  E66F                    2046              LSR.W   D3,D7
000024A0  BE3C 0000               2047              CMP.B   #$00,D7
000024A4  6700 EDC2               2048              BEQ     NOOP
000024A8  BE3C 0001               2049              CMP.B   #$1,D7
000024AC  6700 EDBA               2050              BEQ     NOOP
000024B0                          2051  
000024B0  220A                    2052              MOVE.L  A2,D1
000024B2  143C 0010               2053              MOVE.B  #16,D2
000024B6  103C 000F               2054              MOVE.B  #15,D0
000024BA  4E4F                    2055              TRAP    #15
000024BC                          2056              
000024BC  43F9 00002A89           2057              LEA     MSG_MOVEM,A1
000024C2  103C 000E               2058              MOVE.B  #14,D0
000024C6  4E4F                    2059              TRAP    #15
000024C8                          2060              
000024C8                          2061              * PRINT SIZE
000024C8  3E12                    2062              MOVE.W  (A2),D7
000024CA  48A7 0120               2063              MOVEM.W A2/D7,-(SP)
000024CE  4EB8 1D50               2064              JSR     MOVEM_SIZE_SUB
000024D2  4C9F 0480               2065              MOVEM.W (SP)+,A2/D7
000024D6                          2066                          
000024D6                          2067              
000024D6  344C                    2068              MOVEA.W A4,A2           *move A3 to A2 since absolute address may have been used
000024D8  548A                    2069              ADDA.L  #$2,A2          * Increase counter by long
000024DA                          2070              
000024DA  43F9 00002B12           2071              LEA     BLANK,A1        * PRINT BLANK LINE to prepare for next line
000024E0  103C 000E               2072              MOVE.B  #14,D0
000024E4  4E4F                    2073              TRAP    #15
000024E6                          2074  
000024E6  6000 ED04               2075              BRA     MAIN_LOOP       * Branch back up to main loop
000024EA                          2076  
000024EA                          2077  
000024EA                          2078  BYTE
000024EA  43F9 00002AA4           2079              LEA     MSG_BYTE,A1
000024F0  103C 000E               2080              MOVE.B  #14,D0
000024F4  4E4F                    2081              TRAP    #15
000024F6  6000 0022               2082              BRA     EXIT
000024FA                          2083  
000024FA                          2084  WORD
000024FA  43F9 00002AA8           2085              LEA     MSG_WORD,A1
00002500  103C 000E               2086              MOVE.B  #14,D0
00002504  4E4F                    2087              TRAP    #15
00002506  6000 0012               2088              BRA     EXIT
0000250A                          2089  
0000250A                          2090  LONG
0000250A  43F9 00002AAC           2091              LEA     MSG_LONG,A1
00002510  103C 000E               2092              MOVE.B  #14,D0
00002514  4E4F                    2093              TRAP    #15
00002516  6000 0002               2094              BRA     EXIT
0000251A                          2095              
0000251A                          2096  EXIT        
0000251A  4E75                    2097              RTS                         * MOVE SIZE SUBROUTINE END
0000251C                          2098  
0000251C                          2099  
0000251C                          2100  
0000251C                          2101  T_PRINT_SRC_EA                           * MOVE MODE SRC SUBROUTINE START
0000251C  E50F                    2102              LSL.B   #2,D7   *get rid of destination mode bits
0000251E  EA0F                    2103              LSR.B   #5,D7   *move source mode bits to first 3 bits of D7 
00002520  BE3C 0000               2104              CMP.B   #$0,D7
00002524  6700 00CE               2105              BEQ     GOOD      
00002528  BE3C 0001               2106              CMP.B   #$1,D7
0000252C  6700 00C6               2107              BEQ     GOOD            *An
00002530  BE3C 0002               2108              CMP.B   #$2,D7
00002534  6700 00BE               2109              BEQ     GOOD             *(An)
00002538  BE3C 0003               2110              CMP.B   #$3,D7
0000253C  6700 00B6               2111              BEQ     GOOD      *(An)+
00002540  BE3C 0004               2112              CMP.B   #$4,D7
00002544  6700 00AE               2113              BEQ     GOOD      *-(An)
00002548  BE3C 0007               2114              CMP.B   #$7,D7
0000254C  6700 0040               2115              BEQ     T_IMM_REG_S
00002550  6000 0432               2116              BRA     INVALID_EA 
00002554                          2117   
00002554                          2118  T_MOVE_MODE_DEST                      * MOVE MODE DEST SUBROUTINE START
00002554  EC4F                    2119              LSR.W   #6,D7
00002556  EB0F                    2120              LSL.B   #5,D7 
00002558  EA0F                    2121              LSR.B   #5,D7           *dest mode now in first 3 bits of D7
0000255A  BE3C 0000               2122              CMP.B   #$0,D7          *mode is Dn
0000255E  6700 0094               2123              BEQ     GOOD
00002562  BE3C 0001               2124              CMP.B  #$1,D7          mode is An NOT ALLOWED
00002566  6700 041C               2125              BEQ     INVALID_EA
0000256A  BE3C 0002               2126              CMP.B   #$2,D7             *mode is (An)
0000256E  6700 0084               2127              BEQ     GOOD       *(An) 
00002572  BE3C 0003               2128              CMP.B   #$3,D7
00002576  6700 007C               2129              BEQ     GOOD      *(An)+
0000257A  BE3C 0004               2130              CMP.B   #$4,D7
0000257E  6700 0074               2131              BEQ     GOOD      *-(An)
00002582  BE3C 0007               2132              CMP.B   #$7,D7
00002586  6700 004C               2133              BEQ     T_IMM_REG_D      *(xxx).W or (xxx).L or #<data>
0000258A                          2134  
0000258A  6000 03F8               2135              BRA     INVALID_EA  
0000258E                          2136  
0000258E                          2137  T_IMM_REG_S     *SOURCE immediate data or address
0000258E  4287                    2138              CLR.L     D7
00002590  3E12                    2139              MOVE.W  (A2),D7         *get A2 data back to D7
00002592  EB0F                    2140              LSL.B   #5,D7   *get rid of destination mode bits and source mode bits
00002594  EA0F                    2141              LSR.B   #5,D7   *move source register bits to first 3 bits of D7 
00002596  BE3C 0000               2142              CMP.B   #$0,D7
0000259A  6700 0058               2143              BEQ     GOOD  *word absolute address
0000259E  BE3C 0001               2144              CMP.B   #$1,D7
000025A2  6700 0050               2145              BEQ     GOOD  *long absolute address
000025A6  BE3C 0004               2146              CMP.B   #$4,D7
000025AA  6700 0006               2147              BEQ     T_IMM_DATA_S
000025AE  6000 03D4               2148              BRA     INVALID_EA  
000025B2                          2149  
000025B2                          2150  T_IMM_DATA_S  *SOURCE IMMEDIATE DATA
000025B2                          2151              *gotta go back to get the size and then get that amt of data
000025B2                          2152              *by incrementing a A2 by a word and then getting the next byte word or long
000025B2                          2153              *depending on the size of the move instruction
000025B2                          2154              
000025B2  3E14                    2155              MOVE.W  (A4),D7
000025B4  760C                    2156              MOVE.L  #12,D3
000025B6  E66F                    2157              LSR.W   D3,D7       * SHIFT TO SIZE FIELD
000025B8  BE3C 0001               2158              CMP.B   #$1,D7
000025BC  6700 0036               2159              BEQ     GOOD
000025C0  BE3C 0002               2160              CMP.B   #$2,D7
000025C4  6700 002E               2161              BEQ     GOOD
000025C8  BE3C 0003               2162              CMP.B   #$3,D7
000025CC  6700 0026               2163              BEQ     GOOD
000025D0                          2164              *if neither then it is an error
000025D0  6000 03B2               2165              BRA     INVALID_EA
000025D4                          2166  
000025D4                          2167  T_IMM_REG_D        *DESTINATION immediate data or address
000025D4  3E12                    2168              MOVE.W  (A2),D7         *get A2 data back to D7
000025D6  E94F                    2169              LSL.W   #4,D7   *get rid of size and opcode bits 
000025D8  4243                    2170              CLR     D3
000025DA  163C 000D               2171              MOVE.B  #13,D3
000025DE                          2172              
000025DE  E66F                    2173              LSR.W   D3,D7   *move destination register bits to first 3 bits of D7 
000025E0  BE3C 0000               2174              CMP.B   #$0,D7
000025E4  6700 000E               2175              BEQ     GOOD  *
000025E8  BE3C 0001               2176              CMP.B   #$1,D7
000025EC  6700 0006               2177              BEQ     GOOD
000025F0                          2178              
000025F0  6000 0392               2179              BRA     INVALID_EA
000025F4                          2180  
000025F4  4E75                    2181  GOOD        RTS
000025F6                          2182              
000025F6                          2183       
000025F6                          2184  PRINT_SRC_EA                           * MOVE MODE SRC SUBROUTINE START
000025F6  E50F                    2185              LSL.B   #2,D7   *get rid of destination mode bits
000025F8  EA0F                    2186              LSR.B   #5,D7   *move source mode bits to first 3 bits of D7 
000025FA  BE3C 0000               2187              CMP.B   #$0,D7
000025FE  6700 033A               2188              BEQ     DATA_R_S 
00002602  BE3C 0001               2189              CMP.B   #$1,D7
00002606  6700 014C               2190              BEQ     ADDY_R_SNP      *An
0000260A  BE3C 0002               2191              CMP.B   #$2,D7
0000260E  6700 018C               2192              BEQ     ADDY_R_SP       *(An)
00002612  BE3C 0003               2193              CMP.B   #$3,D7
00002616  6700 01FE               2194              BEQ     ADDY_R_SPI      *(An)+
0000261A  BE3C 0004               2195              CMP.B   #$4,D7
0000261E  6700 0288               2196              BEQ     ADDY_R_SPD      *-(An)
00002622  BE3C 0007               2197              CMP.B   #$7,D7
00002626  6700 0038               2198              BEQ     IMM_REG_S
0000262A  6000 0358               2199              BRA     INVALID_EA  
0000262E                          2200     
0000262E                          2201  MOVE_MODE_DEST                      * MOVE MODE DEST SUBROUTINE START
0000262E  EC4F                    2202              LSR.W   #6,D7
00002630                          2203              
00002630  EB0F                    2204              LSL.B   #5,D7 
00002632  EA0F                    2205              LSR.B   #5,D7           *dest mode now in first 3 bits of D7
00002634  BE3C 0000               2206              CMP.B   #$0,D7          *mode is Dn
00002638  6700 0324               2207              BEQ     DATA_R_D
0000263C                          2208              *CMP.B  #$1,D7          mode is An NOT ALLOWED
0000263C  BE3C 0002               2209              CMP.B   #$2,D7             *mode is (An)
00002640  6700 0196               2210              BEQ     ADDY_R_DP       *(An) 
00002644  BE3C 0003               2211              CMP.B   #$3,D7
00002648  6700 0214               2212              BEQ     ADDY_R_DPI      *(An)+
0000264C  BE3C 0004               2213              CMP.B   #$4,D7
00002650  6700 029E               2214              BEQ     ADDY_R_DPD      *-(An)
00002654  BE3C 0007               2215              CMP.B   #$7,D7
00002658  6700 00DA               2216              BEQ     IMM_REG_D      *(xxx).W or (xxx).L or #<data>
0000265C                          2217  
0000265C  6000 0326               2218              BRA     INVALID_EA    
00002660                          2219  
00002660                          2220  IMM_REG_S     *SOURCE immediate data or address
00002660  4287                    2221              CLR.L     D7
00002662  3E12                    2222              MOVE.W  (A2),D7         *get A2 data back to D7
00002664  EB0F                    2223              LSL.B   #5,D7   *get rid of destination mode bits and source mode bits
00002666  EA0F                    2224              LSR.B   #5,D7   *move source register bits to first 3 bits of D7 
00002668  BE3C 0000               2225              CMP.B   #$0,D7
0000266C  6700 0016               2226              BEQ     W_ADDY  *word absolute address
00002670  BE3C 0001               2227              CMP.B   #$1,D7
00002674  6700 002E               2228              BEQ     L_ADDY  *long absolute address
00002678  BE3C 0004               2229              CMP.B   #$4,D7
0000267C  6700 0048               2230              BEQ     IMM_DATA_S
00002680  6000 0302               2231              BRA     INVALID_EA  
00002684                          2232  
00002684                          2233  W_ADDY      
00002684  43F9 00002B1A           2234              LEA     DOLLAR,A1
0000268A  103C 000E               2235              MOVE.B  #14,D0
0000268E  4E4F                    2236              TRAP    #15
00002690                          2237              
00002690  3E1C                    2238              MOVE.W  (A4)+,D7    *increment A2 by a word, to get word of absolute data in A4
00002692  4287                    2239              CLR.L   D7          *get rid of opcode
00002694  3E14                    2240              MOVE.W  (A4),D7     *put next word into D7
00002696                          2241              
00002696  7410                    2242              MOVE.L  #16,D2
00002698  2207                    2243              MOVE.L  D7,D1
0000269A  103C 000F               2244              MOVE.B  #15,D0
0000269E  4E4F                    2245              TRAP    #15
000026A0                          2246              
000026A0  6000 FE78               2247              BRA EXIT     
000026A4                          2248              
000026A4                          2249  L_ADDY
000026A4  43F9 00002B1A           2250              LEA     DOLLAR,A1
000026AA  103C 000E               2251              MOVE.B  #14,D0
000026AE  4E4F                    2252              TRAP    #15
000026B0  3E1C                    2253              MOVE.W  (A4)+,D7    *increment A2 by a word
000026B2  4287                    2254              CLR.L   D7
000026B4  2E14                    2255              MOVE.L  (A4),D7     *put next word into D7
000026B6  548C                    2256              ADDA.L  #$2,A4      *increment a word and then when we call INCREMENT routine
000026B8                          2257                                  *(to be removed) it will increment another word to get the 
000026B8                          2258                                  *address of the next opcode
000026B8  7410                    2259              MOVE.L  #16,D2
000026BA  2207                    2260              MOVE.L  D7,D1
000026BC  103C 000F               2261              MOVE.B  #15,D0
000026C0  4E4F                    2262              TRAP    #15
000026C2                          2263              
000026C2  6000 FE56               2264              BRA EXIT
000026C6                          2265  
000026C6                          2266  IMM_DATA_S  *SOURCE IMMEDIATE DATA
000026C6                          2267              *gotta go back to get the size and then get that amt of data
000026C6                          2268              *by incrementing a A2 by a word and then getting the next byte word or long
000026C6                          2269              *depending on the size of the move instruction
000026C6                          2270              
000026C6  3E14                    2271              MOVE.W  (A4),D7
000026C8  760C                    2272              MOVE.L  #12,D3
000026CA  548C                    2273              ADDA.L  #$2,A4      *increment A4 by a word 
000026CC  E66F                    2274              LSR.W   D3,D7       * SHIFT TO SIZE FIELD
000026CE  BE3C 0001               2275              CMP.B   #$1,D7
000026D2  6700 003C               2276              BEQ     IMM_DATA_SW
000026D6  BE3C 0002               2277              CMP.B   #$2,D7
000026DA  6700 000E               2278              BEQ     IMM_DATA_SL
000026DE  BE3C 0003               2279              CMP.B   #$3,D7
000026E2  6700 002C               2280              BEQ     IMM_DATA_SW
000026E6                          2281              *if neither then it is an error
000026E6  6000 029C               2282              BRA     INVALID_EA
000026EA                          2283  
000026EA                          2284  
000026EA                          2285  IMM_DATA_SL *long of immediate data
000026EA  4281                    2286              CLR.L   D1
000026EC  43F9 00002B1C           2287              LEA     IMDATA,A1
000026F2  103C 000E               2288              MOVE.B  #14,D0
000026F6  4E4F                    2289              TRAP    #15
000026F8                          2290              
000026F8  43F9 00002B1A           2291              LEA     DOLLAR,A1
000026FE  4E4F                    2292              TRAP    #15
00002700                          2293  
00002700  2214                    2294              MOVE.L  (A4),D1    *move immediate data from A4 to D1
00002702  548C                    2295              ADDA.L  #$2,A4      *increment A4 by a word (will be incremented by another word in opcode method
00002704  7410                    2296              MOVE.L  #16,D2
00002706  103C 000F               2297              MOVE.B  #15,D0
0000270A  4E4F                    2298              TRAP    #15         *print immediate data
0000270C  6000 FE0C               2299              BRA     EXIT 
00002710                          2300              
00002710                          2301  IMM_DATA_SW *word of immediate data
00002710  4281                    2302              CLR.L   D1
00002712  43F9 00002B1C           2303              LEA     IMDATA,A1
00002718  103C 000E               2304              MOVE.B  #14,D0
0000271C  4E4F                    2305              TRAP    #15
0000271E                          2306              
0000271E  43F9 00002B1A           2307              LEA     DOLLAR,A1
00002724  4E4F                    2308              TRAP    #15
00002726  3214                    2309              MOVE.W  (A4),D1    *move immediate data from A4 to D1
00002728  7410                    2310              MOVE.L  #16,D2
0000272A  103C 000F               2311              MOVE.B  #15,D0
0000272E  4E4F                    2312              TRAP    #15
00002730  6000 FDE8               2313              BRA     EXIT 
00002734                          2314              
00002734                          2315  IMM_REG_D        *DESTINATION immediate data or address
00002734  3E12                    2316              MOVE.W  (A2),D7         *get A2 data back to D7
00002736  E94F                    2317              LSL.W   #4,D7   *get rid of size and opcode bits 
00002738  4243                    2318              CLR     D3
0000273A  163C 000D               2319              MOVE.B  #13,D3
0000273E                          2320              
0000273E  E66F                    2321              LSR.W   D3,D7   *move destination register bits to first 3 bits of D7 
00002740  BE3C 0000               2322              CMP.B   #$0,D7
00002744  6700 FF3E               2323              BEQ     W_ADDY  *
00002748  BE3C 0001               2324              CMP.B   #$1,D7
0000274C  6700 FF56               2325              BEQ     L_ADDY
00002750                          2326              
00002750  6000 0232               2327              BRA     INVALID_EA
00002754                          2328  
00002754                          2329  
00002754                          2330  ADDY_R_SNP   *SOURCE An
00002754                          2331              
00002754  43F9 00002B0C           2332              LEA     MSG_A,A1
0000275A  103C 000E               2333              MOVE.B  #14,D0
0000275E  4E4F                    2334              TRAP    #15
00002760                          2335              
00002760  4287                    2336              CLR.L   D7
00002762  3E12                    2337              MOVE.W  (A2),D7
00002764                          2338              
00002764  760D                    2339              MOVE.L  #13,D3 *prepare to move D7 by 13 bits to get source
00002766                          2340              
00002766                          2341              * GET SOURCE REGISTER #
00002766  E76F                    2342              LSL.W  D3,D7
00002768  E66F                    2343              LSR.W  D3,D7
0000276A                          2344              
0000276A  7410                    2345              MOVE.L  #16,D2
0000276C  2207                    2346              MOVE.L  D7,D1
0000276E  103C 000F               2347              MOVE.B  #15,D0
00002772  4E4F                    2348              TRAP    #15
00002774                          2349              
00002774  6000 FDA4               2350              BRA EXIT    
00002778                          2351  ADDY_R_DNP  *An register in bits 11,10,12 of  D7
00002778  43F9 00002B0C           2352              LEA     MSG_A,A1
0000277E  103C 000E               2353              MOVE.B  #14,D0
00002782  4E4F                    2354              TRAP    #15
00002784                          2355              
00002784  4287                    2356              CLR.L   D7
00002786  3E12                    2357              MOVE.W  (A2),D7
00002788  E94F                    2358              LSL.W   #4,D7
0000278A                          2359              
0000278A  760D                    2360              MOVE.L  #13,D3 *prepare to move D7 by 13 bits to get source
0000278C                          2361              
0000278C                          2362              * GET SOURCE REGISTER #
0000278C  E66F                    2363              LSR.W  D3,D7
0000278E                          2364              
0000278E  7410                    2365              MOVE.L  #16,D2
00002790  2207                    2366              MOVE.L  D7,D1
00002792  103C 000F               2367              MOVE.B  #15,D0
00002796  4E4F                    2368              TRAP    #15
00002798                          2369              
00002798  6000 FD80               2370              BRA EXIT    
0000279C                          2371  
0000279C                          2372  
0000279C                          2373  
0000279C                          2374  ADDY_R_SP   *SOURCE (An)
0000279C  43F9 00002B0E           2375              LEA     L_PAREN,A1
000027A2  103C 000E               2376              MOVE.B  #14,D0
000027A6  4E4F                    2377              TRAP    #15
000027A8                          2378              
000027A8  43F9 00002B0C           2379              LEA     MSG_A,A1
000027AE  103C 000E               2380              MOVE.B  #14,D0
000027B2  4E4F                    2381              TRAP    #15
000027B4                          2382              
000027B4  4287                    2383              CLR.L   D7
000027B6  3E12                    2384              MOVE.W  (A2),D7
000027B8                          2385              
000027B8  760D                    2386              MOVE.L  #13,D3 *prepare to move D7 by 13 bits to get source
000027BA                          2387              
000027BA                          2388              * GET SOURCE REGISTER #
000027BA  E76F                    2389              LSL.W  D3,D7
000027BC  E66F                    2390              LSR.W  D3,D7
000027BE                          2391              
000027BE  7410                    2392              MOVE.L  #16,D2
000027C0  2207                    2393              MOVE.L  D7,D1
000027C2  103C 000F               2394              MOVE.B  #15,D0
000027C6  4E4F                    2395              TRAP    #15
000027C8                          2396              
000027C8  43F9 00002B10           2397              LEA     R_PAREN,A1
000027CE  103C 000E               2398              MOVE.B  #14,D0
000027D2  4E4F                    2399              TRAP    #15
000027D4  6000 FD44               2400              BRA EXIT     
000027D8                          2401              
000027D8                          2402  ADDY_R_DP   *DESTINATION (An) 
000027D8  43F9 00002B0E           2403              LEA     L_PAREN,A1
000027DE  103C 000E               2404              MOVE.B  #14,D0
000027E2  4E4F                    2405              TRAP    #15
000027E4                          2406  
000027E4                          2407  
000027E4  43F9 00002B0C           2408              LEA     MSG_A,A1
000027EA  103C 000E               2409              MOVE.B  #14,D0
000027EE  4E4F                    2410              TRAP    #15
000027F0                          2411              
000027F0  4287                    2412              CLR.L   D7
000027F2  3E12                    2413              MOVE.W  (A2),D7
000027F4                          2414              
000027F4  7609                    2415              MOVE.L  #9,D3
000027F6                          2416              
000027F6                          2417              * GET DESTINATION REGISTER #
000027F6  E66F                    2418              LSR.W   D3,D7
000027F8  EB0F                    2419              LSL.B   #5,D7
000027FA  EA0F                    2420              LSR.B   #5,D7
000027FC                          2421              
000027FC  7410                    2422              MOVE.L  #16,D2
000027FE  2207                    2423              MOVE.L  D7,D1
00002800  103C 000F               2424              MOVE.B  #15,D0
00002804  4E4F                    2425              TRAP    #15
00002806                          2426              
00002806  43F9 00002B10           2427              LEA     R_PAREN,A1
0000280C  103C 000E               2428              MOVE.B  #14,D0
00002810  4E4F                    2429              TRAP    #15
00002812  6000 FD06               2430              BRA EXIT    
00002816                          2431              
00002816                          2432  ADDY_R_SPI  *SOURCE (An)+ 
00002816  43F9 00002B0E           2433              LEA     L_PAREN,A1
0000281C  103C 000E               2434              MOVE.B  #14,D0
00002820  4E4F                    2435              TRAP    #15
00002822                          2436              
00002822  43F9 00002B0C           2437              LEA     MSG_A,A1
00002828  103C 000E               2438              MOVE.B  #14,D0
0000282C  4E4F                    2439              TRAP    #15
0000282E                          2440              
0000282E  4287                    2441              CLR.L   D7
00002830  3E12                    2442              MOVE.W  (A2),D7
00002832                          2443              
00002832  760D                    2444              MOVE.L  #13,D3 *prepare to move D7 by 13 bits to get source
00002834                          2445              
00002834                          2446              * GET SOURCE REGISTER #
00002834  E76F                    2447              LSL.W  D3,D7
00002836  E66F                    2448              LSR.W  D3,D7
00002838                          2449              
00002838  7410                    2450              MOVE.L  #16,D2
0000283A  2207                    2451              MOVE.L  D7,D1
0000283C  103C 000F               2452              MOVE.B  #15,D0
00002840  4E4F                    2453              TRAP    #15
00002842                          2454              
00002842  43F9 00002B10           2455              LEA     R_PAREN,A1
00002848  103C 000E               2456              MOVE.B  #14,D0
0000284C  4E4F                    2457              TRAP    #15
0000284E                          2458              
0000284E  43F9 00002B16           2459              LEA     PLUS,A1
00002854  103C 000E               2460              MOVE.B  #14,D0
00002858  4E4F                    2461              TRAP    #15
0000285A  6000 FCBE               2462              BRA EXIT     
0000285E                          2463              
0000285E                          2464  ADDY_R_DPI  *DESTINATION (An)+
0000285E  43F9 00002B0E           2465              LEA     L_PAREN,A1
00002864  103C 000E               2466              MOVE.B  #14,D0
00002868  4E4F                    2467              TRAP    #15
0000286A                          2468  
0000286A                          2469  
0000286A  43F9 00002B0C           2470              LEA     MSG_A,A1
00002870  103C 000E               2471              MOVE.B  #14,D0
00002874  4E4F                    2472              TRAP    #15
00002876                          2473              
00002876  4287                    2474              CLR.L   D7
00002878  3E12                    2475              MOVE.W  (A2),D7
0000287A                          2476              
0000287A  7609                    2477              MOVE.L  #9,D3
0000287C                          2478              
0000287C                          2479              * GET DESTINATION REGISTER #
0000287C  E66F                    2480              LSR.W   D3,D7
0000287E  EB0F                    2481              LSL.B   #5,D7
00002880  EA0F                    2482              LSR.B   #5,D7
00002882                          2483              
00002882  7410                    2484              MOVE.L  #16,D2
00002884  2207                    2485              MOVE.L  D7,D1
00002886  103C 000F               2486              MOVE.B  #15,D0
0000288A  4E4F                    2487              TRAP    #15
0000288C                          2488              
0000288C  43F9 00002B10           2489              LEA     R_PAREN,A1
00002892  103C 000E               2490              MOVE.B  #14,D0
00002896  4E4F                    2491              TRAP    #15
00002898                          2492              
00002898  43F9 00002B16           2493              LEA     PLUS,A1
0000289E  103C 000E               2494              MOVE.B  #14,D0
000028A2  4E4F                    2495              TRAP    #15
000028A4  6000 FC74               2496              BRA EXIT    
000028A8                          2497  
000028A8                          2498  ADDY_R_SPD  *SOURCE -(An)  
000028A8  43F9 00002B18           2499              LEA     MINUS,A1
000028AE  103C 000E               2500              MOVE.B  #14,D0
000028B2  4E4F                    2501              TRAP    #15
000028B4                          2502              
000028B4  43F9 00002B0E           2503              LEA     L_PAREN,A1
000028BA  103C 000E               2504              MOVE.B  #14,D0
000028BE  4E4F                    2505              TRAP    #15
000028C0                          2506              
000028C0  43F9 00002B0C           2507              LEA     MSG_A,A1
000028C6  103C 000E               2508              MOVE.B  #14,D0
000028CA  4E4F                    2509              TRAP    #15
000028CC                          2510              
000028CC  4287                    2511              CLR.L   D7
000028CE  3E12                    2512              MOVE.W  (A2),D7
000028D0                          2513              
000028D0  760D                    2514              MOVE.L  #13,D3 *prepare to move D7 by 13 bits to get source
000028D2                          2515              
000028D2                          2516              * GET SOURCE REGISTER #
000028D2  E76F                    2517              LSL.W  D3,D7
000028D4  E66F                    2518              LSR.W  D3,D7
000028D6                          2519              
000028D6  7410                    2520              MOVE.L  #16,D2
000028D8  2207                    2521              MOVE.L  D7,D1
000028DA  103C 000F               2522              MOVE.B  #15,D0
000028DE  4E4F                    2523              TRAP    #15
000028E0                          2524              
000028E0  43F9 00002B10           2525              LEA     R_PAREN,A1
000028E6  103C 000E               2526              MOVE.B  #14,D0
000028EA  4E4F                    2527              TRAP    #15
000028EC  6000 FC2C               2528              BRA EXIT  
000028F0                          2529           
000028F0                          2530  ADDY_R_DPD  *DESTINATION -(An)
000028F0  43F9 00002B18           2531              LEA     MINUS,A1
000028F6  103C 000E               2532              MOVE.B  #14,D0
000028FA  4E4F                    2533              TRAP    #15
000028FC                          2534              
000028FC  43F9 00002B0E           2535              LEA     L_PAREN,A1
00002902  103C 000E               2536              MOVE.B  #14,D0
00002906  4E4F                    2537              TRAP    #15
00002908                          2538  
00002908                          2539  
00002908  43F9 00002B0C           2540              LEA     MSG_A,A1
0000290E  103C 000E               2541              MOVE.B  #14,D0
00002912  4E4F                    2542              TRAP    #15
00002914                          2543              
00002914  4287                    2544              CLR.L   D7
00002916  3E12                    2545              MOVE.W  (A2),D7
00002918                          2546              
00002918  7609                    2547              MOVE.L  #9,D3
0000291A                          2548              
0000291A                          2549              * GET DESTINATION REGISTER #
0000291A  E66F                    2550              LSR.W   D3,D7
0000291C  EB0F                    2551              LSL.B   #5,D7
0000291E  EA0F                    2552              LSR.B   #5,D7
00002920                          2553              
00002920  7410                    2554              MOVE.L  #16,D2
00002922  2207                    2555              MOVE.L  D7,D1
00002924  103C 000F               2556              MOVE.B  #15,D0
00002928  4E4F                    2557              TRAP    #15
0000292A                          2558              
0000292A  43F9 00002B10           2559              LEA     R_PAREN,A1
00002930  103C 000E               2560              MOVE.B  #14,D0
00002934  4E4F                    2561              TRAP    #15
00002936  6000 FBE2               2562              BRA EXIT  
0000293A                          2563    
0000293A                          2564  DATA_R_S   *SOURCE Dn
0000293A                          2565              * PRINT D
0000293A  43F9 00002B0A           2566              LEA     MSG_D,A1
00002940  103C 000E               2567              MOVE.B  #14,D0
00002944  4E4F                    2568              TRAP    #15
00002946                          2569              
00002946  4287                    2570              CLR.L   D7
00002948  3E12                    2571              MOVE.W  (A2),D7
0000294A                          2572              
0000294A  760D                    2573              MOVE.L  #13,D3 *prepare to move D7 by 13 bits to get source register
0000294C                          2574              
0000294C                          2575              * GET SOURCE REGISTER #
0000294C  E76F                    2576              LSL.W  D3,D7
0000294E  E66F                    2577              LSR.W  D3,D7
00002950                          2578              
00002950                          2579  
00002950  7410                    2580              MOVE.L  #16,D2
00002952  2207                    2581              MOVE.L  D7,D1
00002954  103C 000F               2582              MOVE.B  #15,D0
00002958  4E4F                    2583              TRAP    #15
0000295A  6000 FBBE               2584              BRA EXIT                    * MOVE MODE SRC SUBROUTINE END
0000295E                          2585              
0000295E                          2586              
0000295E                          2587  
0000295E                          2588  DATA_R_D    *DESTINATION Dn
0000295E                          2589              * PRINT D
0000295E  43F9 00002B0A           2590              LEA     MSG_D,A1
00002964  103C 000E               2591              MOVE.B  #14,D0
00002968  4E4F                    2592              TRAP    #15
0000296A                          2593              
0000296A  4287                    2594              CLR.L   D7
0000296C  3E12                    2595              MOVE.W  (A2),D7
0000296E                          2596              
0000296E  7609                    2597              MOVE.L  #9,D3
00002970                          2598              
00002970                          2599              * GET REGISTER #
00002970  E66F                    2600              LSR.W   D3,D7
00002972  EB0F                    2601              LSL.B   #5,D7
00002974  EA0F                    2602              LSR.B   #5,D7
00002976                          2603              
00002976  7410                    2604              MOVE.L  #16,D2
00002978  2207                    2605              MOVE.L  D7,D1
0000297A  103C 000F               2606              MOVE.B  #15,D0
0000297E  4E4F                    2607              TRAP    #15
00002980  6000 FB98               2608              BRA EXIT                    * MOVE MODE DEST SUBROUTINE END
00002984                          2609  
00002984                          2610  INVALID_EA
00002984  1C3C 0001               2611              MOVE.B  #$1,D6
00002988  6000 FB90               2612              BRA     EXIT
0000298C                          2613  
0000298C                          2614  INVAL_EA_NO_RTS
0000298C                          2615             
0000298C  43F9 00002AFE           2616              LEA     MSG_INV_EA,A1
00002992  4E4F                    2617              TRAP    #15
00002994                          2618              
00002994  344C                    2619              MOVEA.W A4,A2           *move A3 to A2 since absolute address may have been used
00002996  548A                    2620              ADDA.L  #$2,A2          * Increase counter by long
00002998  4287                    2621              CLR.L   D7
0000299A  43F9 00002B12           2622              LEA     BLANK,A1        * PRINT BLANK LINE to prepare for next line
000029A0  103C 000E               2623              MOVE.B  #14,D0
000029A4  4E4F                    2624              TRAP    #15
000029A6  6000 E844               2625              BRA     MAIN_LOOP
000029AA                          2626  
000029AA                          2627  
000029AA  FFFF FFFF               2628  END            SIMHALT
000029AE                          2629              
000029AE                          2630              
000029AE                          2631  * ----------------ASCII Codes-----------------
000029AE  =0000000D               2632  CR          EQU     $0D             * ASCII code for Carriage Return
000029AE  =0000000A               2633  LF          EQU     $0A             * ASCII code for Line Feed
000029AE                          2634  
000029AE                          2635  * -------Defined Messages and Variables-------
000029AE= 50 6C 65 61 73 65 ...   2636  DIRECTIONS  DC.B    'Please Enter 6-Digit Hex Address Between 000000 & FFFFF0.',CR,LF,0
000029EA= 45 6E 74 65 72 20 ...   2637  PROMPT1     DC.B    'Enter Startng Address: ',0
00002A02= 45 6E 74 65 72 20 ...   2638  PROMPT2     DC.B    'Enter Ending Address: ',0
00002A19= 20 20 20 52 54 53 00    2639  MSG_RTS     DC.B    '   RTS',0
00002A20= 20 20 20 4A 53 52 00    2640  MSG_JSR     DC.B    '   JSR',0
00002A27= 20 20 20 44 41 54 ...   2641  UNKNOWN     DC.B    '   DATA',0
00002A2F= 30 00                   2642  ZERO        DC.B    '0',0
00002A31= 20 20 20 00             2643  SPACE       DC.B    '   ',0
00002A35= 20 20 20 4C 53 4C 00    2644  MSG_LSL     DC.B    '   LSL',0
00002A3C= 20 20 20 4C 53 52 00    2645  MSG_LSR     DC.B    '   LSR',0
00002A43= 20 20 20 41 53 4C 00    2646  MSG_ASL     DC.B    '   ASL',0
00002A4A= 20 20 20 41 53 52 00    2647  MSG_ASR     DC.B    '   ASR',0
00002A51= 20 20 20 4E 4F 54 00    2648  MSG_NOT     DC.B    '   NOT',0
00002A58= 20 20 20 42 52 41 00    2649  MSG_BRA     DC.B    '   BRA',0
00002A5F= 20 20 20 42 47 54 00    2650  MSG_BGT     DC.B    '   BGT',0
00002A66= 20 20 20 42 4C 45 00    2651  MSG_BLE     DC.B    '   BLE',0
00002A6D= 20 20 20 42 45 51 00    2652  MSG_BEQ     DC.B    '   BEQ',0
00002A74= 20 20 20 52 4F 52 00    2653  MSG_ROR     DC.B    '   ROR',0
00002A7B= 20 20 20 52 4F 4C 00    2654  MSG_ROL     DC.B    '   ROL',0
00002A82= 20 20 20 4E 4F 50 00    2655  MSG_NOP     DC.B    '   NOP',0
00002A89= 20 20 20 4D 4F 56 ...   2656  MSG_MOVEM    DC.B    '   MOVEM',0
00002A92= 20 20 20 4D 4F 56 ...   2657  MSG_MOVEQ   DC.B    '   MOVEQ ',0
00002A9C= 20 20 20 4D 4F 56 ...   2658  MSG_MOVE    DC.B    '   MOVE',0
00002AA4= 2E 42 20 00             2659  MSG_BYTE    DC.B    '.B ',0
00002AA8= 2E 57 20 00             2660  MSG_WORD    DC.B    '.W ',0
00002AAC= 2E 4C 20 00             2661  MSG_LONG    DC.B    '.L ',0
00002AB0= 2C 00                   2662  MSG_COMMA   DC.B    ',',0
00002AB2= 20 20 20 4D 4F 56 ...   2663  MSG_MOVEA   DC.B    '   MOVEA',0
00002ABB= 20 20 20 41 44 44 00    2664  MSG_ADD     DC.B    '   ADD',0
00002AC2= 20 20 20 41 44 44 ...   2665  MSG_ADDA    DC.B    '   ADDA',0
00002ACA= 20 20 20 41 44 44 ...   2666  MSG_ADDQ    DC.B    '   ADDQ',0
00002AD2= 20 20 20 53 55 42 00    2667  MSG_SUB     DC.B    '   SUB',0
00002AD9= 20 20 20 53 55 42 ...   2668  MSG_SUBA    DC.B    '   SUBA',0
00002AE1= 20 20 20 53 55 42 ...   2669  MSG_SUBI    DC.B    '   SUBI',0
00002AE9= 20 20 20 4C 45 41 ...   2670  MSG_LEA     DC.B    '   LEA ',0
00002AF1= 20 20 20 41 4E 44 00    2671  MSG_AND     DC.B    '   AND',0
00002AF8= 20 20 20 4F 52 00       2672  MSG_OR      DC.B    '   OR',0
00002AFE= 20 49 4E 56 41 4C ...   2673  MSG_INV_EA  DC.B    ' INVALID EA',0
00002B0A= 44 00                   2674  MSG_D       DC.B    'D',0
00002B0C= 41 00                   2675  MSG_A       DC.B    'A',0
00002B0E= 28 00                   2676  L_PAREN     DC.B    '(',0
00002B10= 29 00                   2677  R_PAREN     DC.B    ')',0
00002B12= 20 0D 0A 00             2678  BLANK       DC.B    ' ',CR,LF,0
00002B16= 2B 00                   2679  PLUS        DC.B    '+',0
00002B18= 2D 00                   2680  MINUS       DC.B    '-',0
00002B1A= 24 00                   2681  DOLLAR      DC.B    '$',0
00002B1C= 23 00                   2682  IMDATA      DC.B    '#',0
00002B1E                          2683  BEGIN       DS.L    1
00002B22                          2684  FIN         DS.L    1
00002B26                          2685  
00002B26                          2686  
00002B26                          2687              END    START 

No errors detected
No warnings generated


SYMBOL TABLE INFORMATION
Symbol-name         Value
-------------------------
ADDA_IMM_DATA_S     1BF8
ADDA_P_SRC_EA       1B96
ADDA_SIZE_SUB       1C78
ADDQ_DATA_SUB       1D86
ADDQ_SIZE_SUB       1D68
ADDY_R_DNP          2778
ADDY_R_DP           27D8
ADDY_R_DPD          28F0
ADDY_R_DPI          285E
ADDY_R_SNP          2754
ADDY_R_SP           279C
ADDY_R_SPD          28A8
ADDY_R_SPI          2816
ADD_SIZE_SUB        1ACC
AI_M_S              1BD4
AND_ADDY_R_SNP      1738
AND_IMM_DATA_S      16FA
AND_IMM_REG_D       1764
AND_IMM_REG_S       16D6
AND_PRINT_DEST_EA   16A0
AND_PRINT_SRC_EA    1668
AND_SIZE_SUB        13E6
BEGIN               2B1E
BLANK               2B12
BYTE                24EA
CR                  D
DATA_R_D            295E
DATA_R_S            293A
DEST_AND_EA         1602
DEST_SUBTR_EA       2114
DIRECTIONS          29AE
DOLLAR              2B1A
END                 29AA
EXIT                251A
FIN                 2B22
F_AND_DN            1642
F_SUBTR_DN          2154
F_SUBTR_DN_SRC      217A
GOOD                25F4
IMDATA              2B1C
IMM_DATA_S          26C6
IMM_DATA_SL         26EA
IMM_DATA_SW         2710
IMM_REG_D           2734
IMM_REG_FSIXB       1E40
IMM_REG_S           2660
INVALID_EA          2984
INVAL_EA_NO_RTS     298C
LEAS_IMM_REG        1A00
LEA_EAS             19C2
LF                  A
LONG                250A
L_ADDY              26A4
L_PAREN             2B0E
MAIN_LOOP           11EC
MATCH_ADD           1A1C
MATCH_ADDA          1B06
MATCH_ADDQ          1C92
MATCH_AND           12A6
MATCH_LEA           18DC
MATCH_MOVE          22BE
MATCH_MOVEA         2372
MATCH_MOVEM         2498
MATCH_MOVEQ         2414
MATCH_NOP           1780
MATCH_NOT           17AC
MATCH_OR            1346
MATCH_SUB           1E5C
MINUS               2B18
MOVEA_SIZE_SUB      1D38
MOVEM_SIZE_SUB      1D50
MOVE_MODE_DEST      262E
MOVE_SIZE_SUB       1D18
MSG_A               2B0C
MSG_ADD             2ABB
MSG_ADDA            2AC2
MSG_ADDQ            2ACA
MSG_AND             2AF1
MSG_ASL             2A43
MSG_ASR             2A4A
MSG_BEQ             2A6D
MSG_BGT             2A5F
MSG_BLE             2A66
MSG_BRA             2A58
MSG_BYTE            2AA4
MSG_COMMA           2AB0
MSG_D               2B0A
MSG_INV_EA          2AFE
MSG_JSR             2A20
MSG_LEA             2AE9
MSG_LONG            2AAC
MSG_LSL             2A35
MSG_LSR             2A3C
MSG_MOVE            2A9C
MSG_MOVEA           2AB2
MSG_MOVEM           2A89
MSG_MOVEQ           2A92
MSG_NOP             2A82
MSG_NOT             2A51
MSG_OR              2AF8
MSG_ROL             2A7B
MSG_ROR             2A74
MSG_RTS             2A19
MSG_SUB             2AD2
MSG_SUBA            2AD9
MSG_SUBI            2AE1
MSG_WORD            2AA8
NOOP                1268
NOT_EA              1882
NOT_IMM_REG         18C0
PLUS                2B16
PRINT_EA_FSIXB      1E08
PRINT_SRC_EA        25F6
PROMPT1             29EA
PROMPT2             2A02
R_PAREN             2B10
SIZE_NOT            180E
SOURCE_AND_EA       15C4
SOURCE_SUBTR_EA     20D6
SPACE               2A31
START               1000
SUBTR_ADDY_R_SNP    2276
SUBTR_IMM_DATA_S    2238
SUBTR_IMM_REG_D     22A2
SUBTR_IMM_REG_S     2214
SUBTR_PRINT_DEST_EA  21D8
SUBTR_PRINT_SRC_EA  21A0
SUBT_SIZE_SUB       1EF8
TESTINGCODES        1000
T_ADDA_IMM_REG_S    1C54
T_ADDA_PRINT_SRC_EA  1C16
T_AND_ADDY_R_SNP    157C
T_AND_IMM_DATA_S    1540
T_AND_IMM_REG_D     15A8
T_AND_IMM_REG_S     151C
T_AND_PRINT_DEST_EA  14E0
T_AND_PRINT_SRC_EA  14A2
T_DEST_AND_EA       1462
T_DEST_SUBTR_EA     1F74
T_IMM_DATA_S        25B2
T_IMM_REG_D         25D4
T_IMM_REG_FSIXB     1DEC
T_IMM_REG_S         258E
T_LEAS_EA           1968
T_LEAS_IMM_REG      19A6
T_MOVE_MODE_DEST    2554
T_NOT_EA            1828
T_NOT_IMM_REG       1866
T_PRINT_EA_FSIXB    1DB2
T_PRINT_SRC_EA      251C
T_SOURCE_AND_EA     1424
T_SOURCE_SUBTR_EA   1F36
T_SUBTR_ADDY_R_SNP  208E
T_SUBTR_IMM_DATA_S  2052
T_SUBTR_IMM_REG_D   20BA
T_SUBTR_IMM_REG_S   202E
T_SUBTR_PRINT_DEST_EA  1FF2
T_SUBTR_PRINT_SRC_EA  1FB4
UNKNOWN             2A27
WORD                24FA
W_ADDY              2684
ZERO                2A2F
